[{"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/index.js":"1","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/App.js":"2","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reportWebVitals.js":"3","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/socketService.js":"4","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/history.js":"5","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/store.js":"6","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/setAuthToken.js":"7","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/routing/PrivateRoute.js":"8","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/authActions.js":"9","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/Loader.js":"10","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page2.js":"11","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/manage-view.js":"12","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/healthAndSafety.js":"13","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page6.js":"14","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart1.js":"15","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/StaffView.js":"16","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart2.js":"17","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart3.js":"18","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Auth/Auth.js":"19","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/reports/Reports.js":"20","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/login/Form.js":"21","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Emp_view/Emp.js":"22","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/chat/Chat.js":"23","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/create-team/CreateTeam.js":"24","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Stock/Stock.js":"25","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/orders/GenerateOrderForm.js":"26","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Help/Help.js":"27","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Staff_view/Staff.js":"28","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/Manager.js":"29","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-product/AddProduct.js":"30","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-material/AddMaterial.js":"31","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page1.js":"32","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Target/Target.js":"33","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-machine/AddMachine.js":"34","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-target/MachineUpdate.js":"35","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-target/MachinesList.js":"36","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Map/Map.js":"37","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/confirmation/Confirm.js":"38","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-form/AddForm.js":"39","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page3.js":"40","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/HomePage.js":"41","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-status/MachinesStatus.js":"42","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/baseUrl.js":"43","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/types.js":"44","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/healthActions.js":"45","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Header/Header.js":"46","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/layouts/AgGridLayout.js":"47","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Form.js":"48","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Top-Container.js":"49","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Buttom-Container.js":"50","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/layouts/ChartLayout.js":"51","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/teamsActions.js":"52","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/projectActions.js":"53","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/userActions.js":"54","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Staff_view/Big.js":"55","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/staffAction.js":"56","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AssgnModal/AssignModal.js":"57","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AddProject/AddProjectModal.js":"58","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AddteamModel/AddTeamModel.js":"59","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reducers/index.js":"60","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Header/SliderData.js":"61","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/functions.js":"62","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reducers/appReducer.js":"63","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/index.js":"64","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/delete.js":"65","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/post.js":"66","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/put.js":"67","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/get.js":"68","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/baseUrl.js":"69"},{"size":636,"mtime":1628105529000,"results":"70","hashOfConfig":"71"},{"size":7526,"mtime":1628348983661,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1628105529000,"results":"73","hashOfConfig":"71"},{"size":87,"mtime":1628105529000,"results":"74","hashOfConfig":"71"},{"size":199,"mtime":1628349590490,"results":"75","hashOfConfig":"71"},{"size":383,"mtime":1628105529000,"results":"76","hashOfConfig":"71"},{"size":253,"mtime":1628105529000,"results":"77","hashOfConfig":"71"},{"size":585,"mtime":1628105529000,"results":"78","hashOfConfig":"71"},{"size":2133,"mtime":1628105529000,"results":"79","hashOfConfig":"71"},{"size":411,"mtime":1628105529000,"results":"80","hashOfConfig":"71"},{"size":4489,"mtime":1628105529000,"results":"81","hashOfConfig":"71"},{"size":2410,"mtime":1628105529000,"results":"82","hashOfConfig":"71"},{"size":47555,"mtime":1628105529000,"results":"83","hashOfConfig":"71"},{"size":1443,"mtime":1628105529000,"results":"84","hashOfConfig":"71"},{"size":1530,"mtime":1628105529000,"results":"85","hashOfConfig":"71"},{"size":2393,"mtime":1628105529000,"results":"86","hashOfConfig":"71"},{"size":1532,"mtime":1628105529000,"results":"87","hashOfConfig":"71"},{"size":1326,"mtime":1628105529000,"results":"88","hashOfConfig":"71"},{"size":9006,"mtime":1628347742170,"results":"89","hashOfConfig":"71"},{"size":2264,"mtime":1628347602567,"results":"90","hashOfConfig":"71"},{"size":4174,"mtime":1628105529000,"results":"91","hashOfConfig":"71"},{"size":17533,"mtime":1628105529000,"results":"92","hashOfConfig":"71"},{"size":13971,"mtime":1628105529000,"results":"93","hashOfConfig":"71"},{"size":1452,"mtime":1628105529000,"results":"94","hashOfConfig":"71"},{"size":9939,"mtime":1628105529000,"results":"95","hashOfConfig":"71"},{"size":5178,"mtime":1628348525719,"results":"96","hashOfConfig":"71"},{"size":5851,"mtime":1628105529000,"results":"97","hashOfConfig":"71"},{"size":12370,"mtime":1628105529000,"results":"98","hashOfConfig":"71"},{"size":11491,"mtime":1628105529000,"results":"99","hashOfConfig":"71"},{"size":6857,"mtime":1628348306217,"results":"100","hashOfConfig":"71"},{"size":2765,"mtime":1628105529000,"results":"101","hashOfConfig":"71"},{"size":8115,"mtime":1628344694256,"results":"102","hashOfConfig":"71"},{"size":7459,"mtime":1628105529000,"results":"103","hashOfConfig":"71"},{"size":2644,"mtime":1628105529000,"results":"104","hashOfConfig":"71"},{"size":4008,"mtime":1628105529000,"results":"105","hashOfConfig":"71"},{"size":2069,"mtime":1628105529000,"results":"106","hashOfConfig":"71"},{"size":1543,"mtime":1628105529000,"results":"107","hashOfConfig":"71"},{"size":4621,"mtime":1628105529000,"results":"108","hashOfConfig":"71"},{"size":2095,"mtime":1628105529000,"results":"109","hashOfConfig":"71"},{"size":719,"mtime":1628105529000,"results":"110","hashOfConfig":"71"},{"size":256,"mtime":1628105529000,"results":"111","hashOfConfig":"71"},{"size":1247,"mtime":1628105529000,"results":"112","hashOfConfig":"71"},{"size":115,"mtime":1628105529000,"results":"113","hashOfConfig":"71"},{"size":1319,"mtime":1628105529000,"results":"114","hashOfConfig":"71"},{"size":786,"mtime":1628105529000,"results":"115","hashOfConfig":"71"},{"size":6777,"mtime":1628352526291,"results":"116","hashOfConfig":"71"},{"size":1561,"mtime":1628105529000,"results":"117","hashOfConfig":"71"},{"size":4825,"mtime":1628105529000,"results":"118","hashOfConfig":"71"},{"size":2125,"mtime":1628105529000,"results":"119","hashOfConfig":"71"},{"size":2124,"mtime":1628105529000,"results":"120","hashOfConfig":"71"},{"size":1530,"mtime":1628105529000,"results":"121","hashOfConfig":"71"},{"size":1448,"mtime":1628105529000,"results":"122","hashOfConfig":"71"},{"size":1515,"mtime":1628105529000,"results":"123","hashOfConfig":"71"},{"size":707,"mtime":1628105529000,"results":"124","hashOfConfig":"71"},{"size":677,"mtime":1628105529000,"results":"125","hashOfConfig":"71"},{"size":4488,"mtime":1628105529000,"results":"126","hashOfConfig":"71"},{"size":2605,"mtime":1628105529000,"results":"127","hashOfConfig":"71"},{"size":2957,"mtime":1628105529000,"results":"128","hashOfConfig":"71"},{"size":2603,"mtime":1628105529000,"results":"129","hashOfConfig":"71"},{"size":137,"mtime":1628105529000,"results":"130","hashOfConfig":"71"},{"size":1543,"mtime":1628352359004,"results":"131","hashOfConfig":"71"},{"size":202,"mtime":1628105529000,"results":"132","hashOfConfig":"71"},{"size":3393,"mtime":1628105529000,"results":"133","hashOfConfig":"71"},{"size":126,"mtime":1628105529000,"results":"134","hashOfConfig":"71"},{"size":581,"mtime":1628105529000,"results":"135","hashOfConfig":"71"},{"size":642,"mtime":1628105529000,"results":"136","hashOfConfig":"71"},{"size":586,"mtime":1628105529000,"results":"137","hashOfConfig":"71"},{"size":572,"mtime":1628105529000,"results":"138","hashOfConfig":"71"},{"size":108,"mtime":1628105529000,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"2rj3xc",{"filePath":"143","messages":"144","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"142"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"142"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"142"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"142"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"142"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"142"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"142"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"142"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"142"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/index.js",[],["308","309"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/App.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reportWebVitals.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/socketService.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/history.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/store.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/setAuthToken.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/routing/PrivateRoute.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/authActions.js",["333"],"import { baseUrl } from '../baseUrl';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport * as Type from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\nexport const LoadUser = (history) => async (dispatch) => {\n  if (localStorage.CRM_TOKEN) {\n    setAuthToken(localStorage.CRM_TOKEN);\n  }\n  try {\n    const res = await axios.get(baseUrl + '/auth/getMe');\n    dispatch({\n      type: Type.LOAD_USER,\n      payload: res.data.data\n    });\n    toast.success('Login Succesfully');\n    if (res.data.data.type === 'admin') {\n      history.push('/user-management');\n    } else if (res.data.data.type === 'staff') {\n      history.push('/staff');\n    } else if (res.data.data.type === 'manager') {\n      history.push('/manager');\n    } else if (res.data.data.type === 'employee') {\n      history.push('/emp');\n    }\n  } catch (error) {\n    history.push('/auth');\n\n    console.log(error);\n  }\n};\nexport const OnlyLoadUser = () => async (dispatch) => {\n  if (localStorage.CRM_TOKEN) {\n    setAuthToken(localStorage.CRM_TOKEN);\n  }\n  try {\n    const res = await axios.get(baseUrl + '/auth/getMe');\n    dispatch({\n      type: Type.LOAD_USER,\n      payload: res.data.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginUser = (form, history) => async (dispatch) => {\n  axios\n    .post(baseUrl + '/auth/login', form)\n    .then((response) => {\n      dispatch({\n        type: Type.LOGIN_USER,\n        payload: response.data\n      });\n      dispatch(LoadUser(history));\n    })\n    .catch((error) => {\n      toast.error(error.response.data.error);\n    });\n};\nexport const registerUser = (state, history) => async (dispatch) => {\n  axios\n    .post(baseUrl + '/auth/registerUser', state)\n    .then((response) => {\n      dispatch({\n        type: Type.REGISTER_USER,\n        payload: response.data\n      });\n      toast.success('Register Succesfully');\n      dispatch(LoadUser(history));\n    })\n    .catch((error) => {\n      toast.error(error.response.data.error);\n    });\n};\nexport const LogoutUser = () => (dispatch) => {\n  dispatch({ type: Type.LOGOUT_USER });\n};\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/Loader.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page2.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/manage-view.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/healthAndSafety.js",["334"],"import React, { useState, useEffect } from 'react';\nimport {\n  createAccident,\n  getAccident,\n  getlLocationAccident\n} from '../../actions/healthActions';\nimport Header from './../../pages/Header/Header';\nimport HealthSafetyForm from './../../pages/health-safety/Form';\nimport TopContainer from './../../pages/health-safety/Top-Container';\nimport ButtomContainer from './../../pages/health-safety/Buttom-Container';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { Container, Col, Row } from 'react-bootstrap';\nconst HealthSafety = () => {\n  const dispatch = useDispatch();\n  const [accidentForm, setaccidentForm] = useState({\n    Injury: '',\n    FirstAid: '',\n    location: '',\n    Equipment: '',\n    Date: new Date(),\n    Description: '',\n    image: '',\n    signature: '',\n    bodyPart: ''\n  });\n  const [isLoading, setisLoading] = useState(false);\n  useEffect(() => {\n    const runActions = async () => {\n      await dispatch(await getAccident());\n      await dispatch(await getlLocationAccident());\n    };\n    runActions();\n  }, []);\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const {\n      Injury,\n      FirstAid,\n      location,\n      Equipment,\n      Description,\n      image,\n      signature,\n      bodyPart\n    } = accidentForm;\n    if (Injury === '') {\n      toast.error('Enter Injury');\n    } else if (FirstAid === '') {\n      toast.error('Enter FirstAid');\n    } else if (location === '') {\n      toast.error('Enter location');\n    } else if (Equipment === '') {\n      toast.error('Enter Equipment');\n    } else if (Description === '') {\n      toast.error('Enter Description');\n    } else if (image === '') {\n      toast.error('Enter image');\n    } else if (signature === '') {\n      toast.error('Enter signature');\n    } else if (bodyPart === '') {\n      toast.error('Enter bodyPart');\n    } else {\n      const data = new FormData();\n      data.append('Injury', Injury);\n      data.append('FirstAid', FirstAid);\n      data.append('location', location);\n      data.append('Equipment', Equipment);\n      data.append('Date', accidentForm.Date);\n      data.append('Description', Description);\n      data.append('image', image);\n      data.append('signature', signature);\n      data.append('bodyPart', bodyPart);\n      setisLoading(true);\n      setaccidentForm({\n        Injury: '',\n        FirstAid: '',\n        location: '',\n        Equipment: '',\n        Date: new Date(),\n        Description: '',\n        image: '',\n        signature: '',\n        bodyPart: ''\n      });\n      await dispatch(await createAccident(data));\n      setisLoading(false);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <Container fluid>\n        <Row>\n          <Col lg={5} md={5} xs={12} className=\"p-3 bg-shadow\">\n            <h3 className=\"p-3\">Form</h3>\n            <HealthSafetyForm\n              isLoading={isLoading}\n              submitHandler={submitHandler}\n              setaccidentForm={setaccidentForm}\n              accidentForm={accidentForm}\n            />\n          </Col>\n          <Col lg={7} md={7} xs={12}>\n            <Row>\n              <Col lg={12} md={12} xs={12}>\n                <h3 className=\"p-3\">Accident Prone Areas</h3>\n                <TopContainer />\n              </Col>\n              <Col lg={12} md={12} xs={12}>\n                <h3 className=\"p-3\">Recent Accidents</h3>\n                <ButtomContainer />\n                <div class=\"human-body\">\n                  <svg\n                    data-position=\"head\"\n                    id=\"head\"\n                    className=\"head\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"56.594\"\n                    height=\"95.031\"\n                    viewBox=\"0 0 56.594 95.031\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'head'\n                        });\n                      }}\n                      transform=\"translate(-76.067 -15.138)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m93.374 15.788c-3.563 1.1289-5.9619 2.8222-7.373 5.1153-0.70556 1.1289-0.70556 1.1994-0.07056 2.54 1.0583 2.1872 1.5875 5.0447 1.5875 8.1492 0 1.6228 0.10583 2.9281 0.24694 2.9281s1.8344-1.4464 3.7747-3.175c3.1044-2.7517 3.7394-3.5631 5.0094-6.0325 0.77611-1.5875 1.5169-3.4925 1.6228-4.2333 0.28222-1.7286 0.70555-1.7639 1.023-0.07055 0.10583 0.74083 0.84666 2.6458 1.6228 4.2333 1.2347 2.6106 1.7639 3.2456 4.9742 6.1031 1.9756 1.7286 3.7394 3.175 3.9158 3.175 0.21167 0 0.24694-0.70556 0.10583-1.7286-0.28222-2.2578 0.28222-5.9619 1.3758-8.6431 0.9525-2.3636 0.91722-2.5753-1.1642-4.8683-1.4111-1.5522-3.4925-2.7517-6.3853-3.5983-2.6106-0.77611-7.7258-0.70556-10.266 0.10583z\" />\n                      <path d=\"m82.791 25.067c-1.2347 2.8222-1.8344 5.6797-2.0108 9.9836-0.24694 5.2917 0.56444 9.1017 2.5753 12.136 1.4464 2.1519 5.9267 6.7381 6.6322 6.7381 0.24694 0 0.67028-1.0936 1.0583-2.7517 0.35278-1.4817 1.0936-3.5278 1.6581-4.5508l0.98777-1.7992-1.0231-0.38806c-0.56444-0.17639-2.6458-0.52917-4.5861-0.77611-4.9036-0.59972-5.0094-0.67028-3.5983-3.7747 1.5522-3.4572 2.0108-6.4206 1.5169-9.6661-0.49389-3.1397-1.3053-5.715-2.0108-6.2794-0.42333-0.35278-0.59972-0.17639-1.1994 1.1289z\" />\n                      <path d=\"m112.99 24.361c-0.635 1.0231-1.1642 2.9633-1.5875 6.0325-0.42333 3.0692 0 5.8561 1.4464 9.3133 0.77611 1.8697 0.98778 2.7164 0.70556 2.9986-0.42334 0.42333-2.8928 0.9525-4.7272 0.98778-0.70555 0-2.1167 0.17639-3.1044 0.38806-2.0814 0.42333-2.1519 0.77611-0.91722 3.2456 0.45861 0.91722 1.1289 2.8575 1.4817 4.3039 0.35278 1.4464 0.77612 2.6458 0.98778 2.6458 0.88195-0.03528 4.9742-4.445 7.0203-7.5847 0.52917-0.81139 1.3053-2.7869 1.6933-4.4097 1.27-4.9742 0.52917-13.3-1.5169-17.392-0.35278-0.70556-0.70556-1.3053-0.81139-1.3053-0.0706 0-0.38806 0.35278-0.67028 0.77611z\" />\n                      <path d=\"m97.608 25.596c-0.49389 0.91722-1.5522 2.5753-2.3636 3.6689-0.84666 1.0936-1.5169 2.1519-1.5169 2.2931 0 0.17639 0.84667 1.0936 1.905 2.0814l1.905 1.7639-0.45862 3.9864c-0.49389 3.9864-0.49389 4.0217-2.0108 5.6444-1.3053 1.4111-1.6581 2.1519-2.3989 4.8331-0.98777 3.7747-1.023 4.6567-0.21167 5.8561 0.52917 0.84667 0.81138 0.91722 4.0922 1.1289 3.8453 0.24694 6.985 0 7.6905-0.56444 0.24695-0.21167 0.70556-0.81139 0.98778-1.3406 0.42333-0.88194 0.38806-1.3406-0.42333-4.4097-0.9525-3.7042-1.7639-5.3622-3.175-6.3853-0.74084-0.56444-0.91722-1.0936-1.3406-4.6919l-0.49389-4.0569 1.905-1.7992c1.0583-0.98778 1.905-1.9403 1.905-2.1167 0-0.17639-0.635-1.1994-1.4464-2.2578-0.81138-1.0583-1.8344-2.6811-2.293-3.5983-0.45861-0.9525-0.98777-1.6933-1.1289-1.6933s-0.635 0.74083-1.1289 1.6581z\" />\n                      <path d=\"m89.529 34.203c-1.6228 1.27-2.5047 2.3283-2.5047 2.9281 0 0.14111 0.84666 0.14111 1.8697 0 1.5169-0.17639 2.1167-0.07055 3.3867 0.635 0.84665 0.45861 1.7639 1.1642 2.0461 1.5875 0.45861 0.67028 0.38805 0.81139-0.67028 1.5522-1.7639 1.27-3.9158 1.1642-6.2794-0.3175-2.0814-1.27-2.54-1.1289-2.3989 0.77611 0.10583 1.0231 0.17639 1.0583 3.2808 1.6581 3.5278 0.70556 5.3975 0.81139 6.103 0.35278 0.42334-0.24694 2.1519-6.1736 2.1872-7.4083 0-0.28222-0.635-1.0936-1.4111-1.8697-1.9756-1.8344-3.175-1.8344-5.6091 0.10583z\" />\n                      <path d=\"m102.19 34.098c-0.77611 0.77611-1.4111 1.5875-1.4111 1.8697 0.0353 1.2347 1.7639 7.1614 2.1872 7.4083 0.70556 0.45861 2.8222 0.38806 5.4681-0.21167 1.3053-0.3175 2.7517-0.635 3.2103-0.70556 0.52916-0.14111 0.77611-0.45861 0.77611-1.0231 0-1.9403-0.24695-2.0108-2.7164-0.70556-2.6458 1.3758-3.4925 1.4817-5.3975 0.49389-1.8344-0.9525-1.8344-1.8344 0-3.0339 1.4817-0.98778 3.563-1.27 5.3975-0.70556 1.4111 0.42333 1.27-0.59972-0.35278-2.0108-3.7042-3.2456-4.9036-3.4925-7.1614-1.3758z\" />\n                      <path d=\"m77.076 40.695c-0.91722 0.81139-1.3406 2.4342-0.70556 2.7164 0.14111 0.03528 0.70556 1.1289 1.2347 2.3989 1.9756 4.6214 3.3867 6.35 4.0217 4.7272 0.21167-0.56444-0.74083-5.1858-1.905-9.0664-0.56444-1.905-1.1642-2.0814-2.6458-0.77611z\" />\n                      <path d=\"m117.75 41.118c-0.21166 0.74083-0.38805 1.6228-0.38805 1.9403 0 0.35278-0.14111 0.635-0.28222 0.635-0.45862 0-1.905 6.7733-1.5522 7.1261 0.17639 0.17639 0.70556 0.28222 1.1289 0.21167 0.59972-0.07056 1.1642-0.98778 2.6811-4.3392 1.0583-2.2931 1.905-4.3039 1.905-4.445 0-0.14111-0.42333-0.74083-0.91722-1.3406-1.27-1.5169-2.1167-1.4464-2.5753 0.21167z\" />\n                      <path d=\"m82.615 49.726c0.10583 0.67028 0.42333 3.4219 0.67028 6.1383 0.45861 4.8683 0.49389 4.9036 1.6228 5.8561 2.5753 2.1872 8.6078 4.7978 9.4191 4.1275 0.67027-0.52917 0.56444-2.1872-0.17639-3.1397-0.35278-0.45861-1.3406-2.0461-2.1872-3.4925-1.3406-2.3283-8.2197-10.16-9.2428-10.548-0.17639-0.07055-0.24694 0.35278-0.10583 1.0583z\" />\n                      <path d=\"m110.77 52.442c-4.445 4.7625-7.9728 10.301-7.7964 12.347 0.10584 1.1642 0.21167 1.3053 0.98778 1.1994 1.3053-0.17639 7.0556-3.0339 8.4667-4.2333 1.1642-0.98778 1.2347-1.1642 1.3406-3.7394 0.0706-1.4817 0.28223-2.6811 0.42334-2.6811s0.28222-0.98778 0.28222-2.2225c0-1.2347 0.10583-2.7164 0.24694-3.3514 0.10584-0.635 0.10584-1.1289-0.0705-1.1289-0.14111 0.03528-1.905 1.7286-3.8806 3.81z\" />\n                      <path d=\"m93.022 59.039c0 0.49389 0.3175 1.1994 0.67027 1.5522 1.27 1.27 1.9755 2.6106 2.3283 4.4097l0.35278 1.7992h4.5155l0.42334-1.9403c0.24694-1.2347 0.84666-2.6106 1.6933-3.7394 0.70556-0.98778 1.3053-1.9756 1.3053-2.1872 0-0.56444-1.4464-0.70556-6.5969-0.74083h-4.6919z\" />\n                      <path d=\"m110.31 64.507c0 0.17639-1.1642 0.88194-2.6106 1.5522-2.5047 1.1289-2.6811 1.3053-3.7394 3.3867-1.6228 3.2103-3.4572 9.0311-3.8453 12.206-0.3175 2.928-0.17639 5.08 0.38806 5.08 2.1519 0 8.0786-6.1383 11.042-11.465l1.2347-2.1872-0.3175-3.2808c-0.21167-1.7992-0.42334-3.3161-0.49389-3.4219-0.10584-0.07056-1.4464 1.4111-3.0339 3.3161-2.9281 3.5631-4.7272 6.5969-6.4558 10.866-0.81138 2.0814-0.9525 2.2578-0.77611 1.0583 0.35278-2.2578 1.7992-6.3853 2.8575-8.0786 1.6581-2.6106 5.8914-7.9375 6.3853-7.9375 0.59972-0.03528 0.52917-1.4464-0.10583-1.4464-0.28222 0-0.52917 0.14111-0.52917 0.35278z\" />\n                      <path d=\"m86.672 65.213c0 0.17639 1.27 1.9403 2.7869 3.9158 1.5522 1.9756 3.3161 4.5156 3.9158 5.6444 1.023 1.9403 2.7164 7.5847 2.3636 7.9375-0.0706 0.0706-0.49389-0.84666-0.9525-2.0461-1.3053-3.6336-4.1628-8.7489-6.2441-11.218-1.0936-1.27-2.1519-2.5753-2.3636-2.9281-0.84667-1.3053-1.1642-0.59972-1.4111 3.0692-0.24694 3.4572-0.21167 3.7747 0.59972 5.3975 1.4111 2.7164 4.0922 6.1383 6.8439 8.643 2.3989 2.1872 4.4803 3.4572 4.9389 2.9986 0.42333-0.45862 0.14111-5.3975-0.45861-8.008-0.59972-2.7869-2.0461-6.6675-3.4925-9.5603-0.7761-1.4817-1.2347-1.905-3.3514-2.9633-2.5753-1.3053-3.175-1.4464-3.175-0.88194z\" />\n                      <path d=\"m93.727 68.423c0 0.38806 1.1289 2.9633 1.3758 3.1397 0.42333 0.3175 2.1519 6.4558 2.4694 8.9606 0.52917 3.6336 1.5522 4.1628 1.9755 0.98778 0.38805-2.9281 1.5875-7.4789 2.7869-10.442l1.1289-2.8575h-4.8683c-2.6811 0-4.8683 0.10583-4.8683 0.21167z\" />\n                    </g>\n                  </svg>\n                  <svg\n                    data-position=\"left-shoulder\"\n                    id=\"left-shoulder\"\n                    className=\"left-shoulder\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"109.532\"\n                    height=\"46.594\"\n                    viewBox=\"0 0 109.532 46.594\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'left-shoulder'\n                        });\n                      }}\n                      transform=\"translate(-33.727 -40.066)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m69.691 42.395c-2.6106 1.2347-5.3975 2.5047-6.1736 2.8222l-1.4111 0.56444 0.88194 0.70556c1.5522 1.27 5.715 3.0692 8.9958 3.8453 1.7639 0.42333 5.1858 1.3053 7.62 1.9756 4.8331 1.27 5.6092 1.3758 5.6092 0.77611 0-0.21167-1.4817-1.9403-3.2808-3.8453-2.9281-3.0692-4.4803-5.08-6.3853-8.2197-0.3175-0.52917-0.70556-0.9525-0.84667-0.91722-0.14111 0-2.3989 1.0583-5.0094 2.2931z\" />\n                      <path d=\"m104.05 41.019c-1.905 3.1397-3.4572 5.1506-6.3853 8.2197-1.7992 1.905-3.2808 3.6336-3.2808 3.8453 0 0.59972 0.77611 0.49389 5.6092-0.77611 2.4342-0.67028 5.8914-1.5522 7.62-1.9756 3.2808-0.77611 7.4436-2.5753 8.9958-3.8453l0.88194-0.70556-1.5169-0.59972c-0.81139-0.35278-3.6689-1.6228-6.3147-2.8575s-4.8683-2.2578-4.9389-2.2578c-0.0353 0-0.35278 0.42333-0.67028 0.9525z\" />\n                      <path d=\"m52.722 49.027c-2.9633 1.1994-7.3025 3.6336-9.525 5.3622-5.4328 4.1628-7.6553 8.8547-8.9606 18.768-0.635 4.6919-0.67028 7.4789-0.14111 7.4789 0.17639 0 1.0583-0.52917 1.9403-1.1994 0.88194-0.67028 2.8222-1.7286 4.3039-2.3283 7.8669-3.1397 13.088-6.4558 15.628-9.8778 2.54-3.3867 5.1153-9.2428 5.8208-13.159 0.3175-1.8697-0.28222-2.8222-2.7869-4.4803-2.4342-1.6581-3.4572-1.7286-6.2794-0.56444z\" />\n                      <path d=\"m120.95 49.38c-2.3283 1.5875-2.9281 2.4694-2.9281 4.2686 0 1.8344 1.9756 7.5142 3.6336 10.513 2.9633 5.2564 6.8792 8.2903 15.663 12.1 2.8575 1.2347 5.7856 2.7164 6.4911 3.3161 2.1167 1.6933 2.2225 1.5522 1.9403-2.4694-0.42334-6.3853-1.6581-11.924-3.4925-15.875-1.905-4.0922-6.597-8.0786-13.229-11.218-4.5508-2.1519-5.715-2.2225-8.0786-0.635z\" />\n                    </g>\n                  </svg>\n                  <svg\n                    data-position=\"chest\"\n                    id=\"chest\"\n                    className=\"chest\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"86.594\"\n                    height=\"45.063\"\n                    viewBox=\"0 0 86.594 45.063\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'chest'\n                        });\n                      }}\n                      transform=\"translate(-50.012 -42.087)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m53.434 42.334c-0.49389 0.45861-0.21167 0.84667 0.91722 1.3406 3.2456 1.3758 5.4328 3.9158 5.08 5.9619-0.28222 1.7639-3.5278 9.0311-5.6797 12.665-2.7869 4.7272-3.7394 6.9144-3.7394 8.6078 0 1.3053 0.17639 1.6228 1.6581 2.9281 2.3283 2.0461 7.5142 5.5033 10.054 6.7028 3.1044 1.4817 5.4328 1.8697 10.125 1.6933 3.3867-0.10583 4.3744-0.28222 5.7856-0.9525 3.4219-1.6933 6.1031-5.1153 7.1614-9.2075 0.49389-1.905 0.56444-3.2808 0.35278-8.1844-0.28222-7.3378-0.74083-9.0311-2.9986-11.254-1.9756-1.9756-4.4803-3.0339-13.441-5.7856-4.3392-1.3406-7.3025-2.4694-8.8547-3.3867-1.905-1.1642-2.6106-1.3758-4.2333-1.3758-1.0936 0-2.0814 0.10583-2.1872 0.24694z\" />\n                      <path d=\"m112.49 43.498c-1.2347 0.77611-3.6336 1.7992-5.2917 2.2931-17.886 5.3622-18.874 6.2089-19.509 16.933-0.38806 6.4911-0.07056 9.4544 1.3406 12.241 1.1994 2.3989 3.7747 5.08 5.9619 6.2089 1.6581 0.91722 2.0108 0.9525 6.8792 0.9525 4.5156 0 5.3975-0.10583 7.3731-0.84667 2.4342-0.88194 7.0908-3.5278 7.0908-3.9864 0-0.14111 0.21167-0.28222 0.45861-0.28222 0.21167 0 1.6228-0.98778 3.0692-2.2225 2.5047-2.0814 2.6458-2.2931 2.7517-3.81 0.10584-1.6581-0.24694-2.5047-4.2686-9.8425-2.1872-4.0217-5.1858-11.077-5.1858-12.241 0-1.0936 3.1044-4.3392 4.8683-5.0447 0.74084-0.28222 1.1289-0.67028 1.0583-1.0231-0.0706-0.42333-0.59973-0.59972-2.2225-0.635-1.905-0.07055-2.3283 0.03528-4.3744 1.3053z\" />\n                      <path d=\"m82.82 50.024c0 0.28222 0.45861 1.1642 0.98778 1.905 0.56444 0.77611 1.3053 2.1167 1.6228 2.9986 0.35278 0.88194 0.74083 1.6228 0.88194 1.6228s0.635-0.88194 1.0583-1.9756c0.45861-1.0583 1.2347-2.4342 1.6933-2.9986 1.0583-1.2347 0.88194-2.2931-0.3175-1.8344-1.0231 0.35278-3.6689 0.35278-4.9389 0-0.77611-0.21167-0.98778-0.14111-0.98778 0.28222z\" />\n                    </g>\n                  </svg>\n\n                  <svg\n                    data-position=\"stomach\"\n                    id=\"stomach\"\n                    className=\"stomach\"\n                    viewBox=\"0 0 210 597\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"205.25\"\n                    height=\"507.594\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'stomach'\n                        });\n                      }}\n                      transform=\"translate(-70.348 -18.63)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m71.19 18.922c-0.10583 0.17639-0.38806 1.5522-0.59972 3.0692-0.74083 5.1858 0.35278 20.955 1.4464 20.955 0.21167 0 0.35278-2.6811 0.35278-6.6675 0-3.6689 0.17639-8.2903 0.38805-10.301 0.21167-2.0108 0.38806-3.9158 0.42334-4.1981 0-0.28222 0.17639-0.74083 0.38805-1.0231 0.28223-0.35278 0.14112-0.67028-0.59971-1.3053-1.0583-0.91722-1.5169-1.0231-1.7992-0.52917z\" />\n                      <path d=\"m144 19.239c-0.81139 0.67028-0.81139 0.74083-0.38805 3.1044 0.24694 1.3406 0.52916 6.5264 0.635 11.501 0.17639 8.3961 0.49389 10.83 0.98778 7.9375 0.52916-3.1044 0.88194-6.2794 0.88194-8.2903 0-1.1994 0.14111-2.1872 0.35278-2.1872 0.21166 0 0.35278-1.4111 0.35278-3.5278s-0.14112-3.5278-0.35278-3.5278c-0.17639 0-0.35278-0.84667-0.38806-1.8697-0.0705-3.4572-0.635-4.3039-2.0814-3.1397z\" />\n                      <path d=\"m74.329 22.026c-0.14111 0.52917-0.3175 5.8914-0.42334 11.889-0.17638 10.583 0.0353 16.087 0.56445 16.087 0.17639 0 0.95249-1.8697 1.7992-4.1628 0.81138-2.2578 2.8222-6.8439 4.4802-10.16 1.6228-3.3161 3.0692-6.7028 3.175-7.5142 0.17639-1.3053 0.0706-1.5875-0.98776-2.6106-1.5169-1.4817-5.8208-4.0569-7.2319-4.3392-0.98777-0.17639-1.1289-0.10583-1.3758 0.81139z\" />\n                      <path d=\"m139.24 21.92c-0.9525 0.49389-2.7869 1.5522-4.0569 2.3989-2.1872 1.4464-2.2931 1.5875-2.3989 3.0692-0.10583 1.4111 0.74083 4.5156 1.3406 4.9742 0.9525 0.74083 4.7272 9.0664 7.1967 15.946 1.1994 3.3161 1.4817 2.1167 1.8344-7.8317 0.21166-6.2442-0.21167-16.263-0.81139-18.627-0.24695-0.98778-0.91723-0.98778-3.1044 0.07056z\" />\n                      <path d=\"m100.43 24.919c-2.6458 0.9525-5.1858 2.3283-6.2088 3.3514-1.0231 1.0231-2.3283 5.0447-3.4925 10.689-0.77612 3.8806-0.88194 5.3975-0.38806 5.3975 0.17639 0 1.7992-0.70556 3.6336-1.5875 3.6689-1.7639 6.1383-2.4694 10.301-2.9986 3.422-0.42333 3.7394-0.74083 3.7042-3.6689-0.0353-5.1153-0.42333-6.7028-2.2225-9.3839-1.905-2.7869-2.2225-2.8928-5.327-1.7992z\" />\n                      <path d=\"m110.95 26.753c-1.7992 2.6811-2.1167 4.0922-2.1872 8.9958-0.0353 3.3161 0.24695 3.6689 3.5278 4.0217 4.6567 0.52917 9.2428 1.9403 12.312 3.8453 2.0108 1.2347 2.2578 1.0583 1.9756-1.4464-0.24694-2.1519-2.2578-10.548-2.9633-12.347-0.70556-1.7992-3.2808-3.4925-7.4436-4.9036-3.1044-1.0936-3.3514-0.98778-5.2211 1.8344z\" />\n                      <path d=\"m86.994 26.506c-0.38806 0.28222-2.3636 3.81-4.3744 7.8317-2.0461 4.0217-3.8805 7.5494-4.0922 7.7964-0.74083 0.77611-2.5753 6.3147-3.175 9.525-0.67027 3.5631-0.52916 7.5494 0.35278 9.2428 0.635 1.1994 1.6228 1.4817 1.6228 0.42333 0-1.5875 2.5047-5.4328 5.8208-8.9606 1.8697-1.9756 3.7747-4.2333 4.2333-5.0094 0.98776-1.6581 4.3744-16.792 4.4097-19.509 0-1.5169-3.2103-2.4342-4.7978-1.3406z\" />\n                      <path d=\"m125.66 26.718c-0.38806 0.38806-0.70556 0.84667-0.70556 1.0231 0 1.6933 3.2808 17.11 4.0217 18.803 0.59972 1.4817 2.0108 3.2103 5.6092 6.985 2.7517 2.8575 4.833 6.2442 4.833 7.9022 0 0.9525 1.0231 0.635 1.6581-0.59972 1.023-1.8344 0.81139-8.3256-0.38806-12.418-1.0583-3.7042-9.3133-20.355-10.654-21.625-1.1642-1.0231-3.3867-1.0583-4.3744-0.07056z\" />\n                      <path d=\"m98.318 42.205c-3.9158 1.4111-6.9144 3.3514-7.7963 5.0447-0.7761 1.5169-1.5522 5.9619-1.5522 8.9606 0 2.9986 0.24694 3.175 2.3989 1.7286 2.7869-1.8344 5.1505-2.3989 10.901-2.5753l5.3622-0.14111 0.24695-1.9403c0.35277-2.9281 0-10.548-0.56445-11.218-0.635-0.77611-6.6322-0.70556-8.9958 0.14111z\" />\n                      <path d=\"m109.5 41.993c-0.59972 0.70556-0.9525 7.0203-0.635 10.583l0.28223 2.7164h4.3039c5.08 0 8.9606 0.81139 11.606 2.4694 2.787 1.7286 2.8575 1.6933 2.6106-2.9281-0.38805-7.2319-1.4464-9.0664-6.9497-11.677-2.8222-1.3406-3.2103-1.4111-6.8792-1.5522-3.175-0.10583-3.9864-0.03528-4.3392 0.38806z\" />\n                      <path d=\"m83.678 53.811c-5.468 5.6092-6.0677 7.6906-3.5278 12.665 2.5753 5.08 6.1383 8.5019 9.7013 9.3133 1.3406 0.28222 1.8344 0.56444 1.5875 0.81139-0.56444 0.56444-0.42333 4.1275 0.35278 9.5603 1.7639 11.959 5.1858 21.731 9.3838 26.599 1.4111 1.6228 4.3744 3.2103 5.9972 3.2103h0.91722l-0.17639-15.628c-0.17639-16.369-0.52916-20.32-1.7992-21.237-1.4817-1.0936-9.8778-3.3514-12.453-3.3514-0.98777 0-1.4817-0.28222-2.4342-1.3406-3.8452-4.2686-5.2564-11.042-3.81-18.591 1.0231-5.3975 1.0231-5.4681 0.28223-5.4681-0.38806 0-2.1167 1.4817-4.0216 3.4572z\" />\n                      <path d=\"m128.62 51.66c0.10583 0.74083 0.45861 2.6106 0.74083 4.1628 1.3758 7.6553 0.0706 14.323-3.6336 18.38-1.2347 1.3406-1.4464 1.4464-3.7747 1.6581-2.3636 0.21167-6.1383 1.1994-9.8778 2.6106-1.658 0.59972-1.7992 0.74083-2.1872 2.3636-0.84667 3.3514-1.1642 9.7014-1.1642 22.331v12.806h0.81139c1.6581 0 5.08-2.0108 6.4911-3.81 3.0692-3.8453 5.9267-10.83 7.6553-18.627 1.1289-5.0447 2.0814-12.771 1.905-15.311l-0.14111-2.0461 1.8344-0.56444c3.5278-1.1289 7.0556-4.5156 9.4897-9.1722 1.5169-2.8928 1.658-5.3975 0.49389-7.7258-0.91723-1.7992-7.3731-8.3608-8.255-8.3608-0.52917 0-0.59973 0.21167-0.38806 1.3053z\" />\n                      <path d=\"m97.436 57.269c-2.9986 0.635-4.7977 1.3053-6.8791 2.6458l-1.6933 1.0583 0.21167 2.1872c0.28222 2.9986 1.7992 7.5847 3.175 9.6308 1.0583 1.6228 1.27 1.7286 3.4219 2.1519 1.27 0.24694 3.9864 0.9525 6.0678 1.5522 3.9511 1.1642 5.3622 1.1642 5.715 0.03528 0.10584-0.3175 0.21167-4.2686 0.28222-8.7136 0.10584-8.8194-0.14111-10.513-1.5875-10.901-1.3758-0.35278-6.35-0.17639-8.7136 0.35278z\" />\n                      <path d=\"m110.03 57.128c-1.0583 0.77611-1.3053 2.8575-1.3053 11.254 0 7.2672 0.0706 8.0081 0.635 8.5372 0.84667 0.77611 1.9756 0.74083 4.7978-0.14111 1.3053-0.38806 3.81-1.0231 5.6092-1.4111 1.9756-0.42333 3.5278-0.98778 3.9864-1.4111 1.8344-1.6933 4.198-8.9253 3.9511-11.924-0.10583-1.0583-0.35278-1.4464-1.7992-2.3636-2.8928-1.905-5.8561-2.6811-10.83-2.8575-3.3867-0.14111-4.5508-0.07056-5.0447 0.3175z\" />\n                      <path d=\"m77.363 67.041c-1.27 3.3161-2.293 12.629-1.7992 16.157 1.0936 7.7258 8.2197 18.697 16.334 25.188 3.8805 3.1044 7.3025 4.6214 7.3025 3.2456 0-0.28223-0.95249-2.3636-2.0814-4.692-4.5155-9.1017-7.4436-19.297-7.4436-25.929 0-3.175-0.38805-4.0217-2.1872-4.9389-1.9755-0.98778-6.9144-6.0325-8.0433-8.1844-0.95249-1.8344-1.6228-2.0814-2.0814-0.84667z\" />\n                      <path d=\"m138.01 66.511c0 0.56444-2.7869 4.445-4.2686 5.9972-0.84667 0.88194-2.6106 2.2931-3.9158 3.1397-2.6458 1.7286-2.6106 1.5522-2.8928 6.985-0.38806 7.0556-4.0217 18.697-8.1844 26.176-1.4111 2.5047-1.5169 3.2808-0.45861 3.2808 2.2225 0 8.7489-4.9742 12.876-9.8072 4.8331-5.6444 8.89-13.053 9.9131-17.921 0.49389-2.3989 0.49389-3.3867 0.17639-7.0203-0.42334-4.1628-1.1994-8.5725-1.8344-10.266-0.3175-0.77611-1.4111-1.2347-1.4111-0.56444z\" />\n                    </g>\n                  </svg>\n\n                  <svg\n                    data-position=\"right-hand\"\n                    id=\"right-hand\"\n                    className=\"right-hand\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"90\"\n                    height=\"198.938\"\n                    viewBox=\"0 0 90 38.938\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'right-hand'\n                        });\n                      }}\n                      transform=\"translate(-90.659 -28.877)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m93.558 29.409c-0.77611 0.84667-0.81139 2.8222-0.10583 7.5494 1.27 8.3961 3.8806 17.921 7.1614 25.929 1.1994 2.9986 2.6106 5.5739 4.9036 8.9606 3.0339 4.5508 4.3392 6.7381 4.3392 7.2672 0 0.14111-0.77611-0.9525-1.6933-2.3636-3.1397-4.7625-7.7611-10.195-8.7136-10.195-0.88194 0-1.3053 1.7286-1.1642 4.7978 0.14111 2.6106 0.3175 3.2103 2.3283 7.4436 1.1994 2.54 2.1872 4.7978 2.1872 5.0094 0 1.6228 4.5508 13.688 8.1492 21.555 0.98778 2.2225 3.5278 8.3256 5.6444 13.582 2.2931 5.7856 3.9864 9.525 4.2686 9.525 1.27 0-0.24695-14.64-2.3989-23.46-1.5522-6.1736-6.5264-21.378-7.7258-23.566-0.81139-1.4464-0.88194-2.4694-0.17639-2.0108 0.67028 0.38806 0.84667-2.8222 0.84667-13.406 0-18.309-1.1289-25.4-4.7272-30.198-3.422-4.5508-11.324-8.3961-13.123-6.4206z\" />\n                      <path d=\"m90.806 41.65c-0.38806 1.0936-0.0353 3.4572 1.3758 8.3256 2.4342 8.5372 5.1506 14.464 6.6322 14.464 0.74084 0 0.59973-0.77611-1.6933-8.9958-3.4572-12.524-4.2333-14.64-5.4681-14.64-0.28222 0-0.67027 0.38806-0.84666 0.84667z\" />\n                      <path d=\"m113.14 66.097c-1.5875 3.4572-1.5169 8.2903 0.28222 17.357 0.98778 4.9389 2.6811 9.7719 5.5739 15.734 2.3989 4.9389 5.9267 11.007 7.1614 12.241 0.35278 0.35278 0.635 0.74083 0.635 0.88195 0 0.17638 1.1642 1.6933 2.5753 3.4572 2.2225 2.7869 3.9864 4.3039 4.4097 3.8806 0.0706-0.0706-0.635-1.8344-1.6228-3.9511-3.4925-7.5142-5.7503-15.734-6.6322-24.236-0.91722-9.1017-2.2578-14.076-5.2917-19.967-2.3283-4.5156-4.3039-7.1967-5.3622-7.3378-0.67028-0.10583-0.9525 0.21167-1.7286 1.9403z\" />\n                      <path d=\"m121.5 114.25c0 0.42334 0.24694 2.7164 0.52916 5.0447 0.74084 6.103 0.67028 9.8778-0.21166 13.3-0.9525 3.7042-0.77612 6.2089 0.59972 8.7842 1.27 2.293 3.6336 4.9389 5.3622 6.0325 0.98778 0.59972 1.1642 0.84666 0.70556 0.91722-0.35278 0.0705-0.635 0.3175-0.635 0.56444 0 0.45861 4.7272 8.5372 5.5386 9.4544 0.3175 0.35277 1.023 0.635 1.5875 0.635 0.77611 0 0.98778-0.14112 0.98778-0.81139 0-1.0583-3.81-7.9375-4.5508-8.1844-0.3175-0.10583-0.9525-0.52916-1.4464-0.91722-0.74083-0.59972-0.77611-0.67028-0.10583-0.35278 0.9525 0.49389 1.8697 0.49389 1.8697 0.0353 0-0.17638-0.56444-1.1289-1.2347-2.0814-2.4342-3.3867-2.7164-4.9742-1.7286-10.231 0.70555-3.7042 0.49389-6.4911-0.74084-10.795-1.1642-3.9864-2.7164-7.5847-4.3744-10.019-1.4111-2.1872-2.1519-2.6458-2.1519-1.3758z\" />\n                    </g>\n                  </svg>\n                  <svg\n                    data-position=\"left-hand\"\n                    id=\"left-hand\"\n                    className=\"left-hand\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"90\"\n                    height=\"198.938\"\n                    viewBox=\"0 0 90 38.938\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'left-hand'\n                        });\n                      }}\n                      transform=\"translate(-20.284 -19.233)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m56.568 20.688c-2.0461 1.0231-3.6336 2.1872-5.2917 3.81-5.2564 5.2211-6.4558 11.113-6.4911 31.962-0.03528 10.901 0.14111 13.653 0.77611 13.547 0.74083-0.10583 0.70556 0.17639-0.14111 1.8697-1.4111 2.7869-5.9267 16.686-7.5142 23.213-1.7992 7.4083-3.5983 20.955-3.0692 23.107 0.24694 1.0231 0.84667 1.1642 1.1289 0.24695 0.77611-2.3636 6.5969-16.616 9.0664-22.119 3.5278-7.9728 6.5617-15.734 7.8317-20.108 0.49389-1.7639 1.7992-5.08 2.8928-7.4083 1.7992-3.81 2.0108-4.5156 2.1519-7.0556 0.14111-2.9986-0.28222-4.7625-1.1642-4.7625-0.9525 0-5.5033 5.3269-8.7136 10.195-0.91722 1.4111-1.6933 2.4694-1.6933 2.3283 0-0.52917 2.2578-4.2686 4.8683-8.0786 2.9281-4.1981 4.9036-8.6783 7.5847-17.004 2.4694-7.7258 4.4803-17.568 4.4803-22.119 0-3.4925-1.9756-3.9864-6.7028-1.6228z\" />\n                      <path d=\"m62.812 33.247c-0.49389 1.1289-1.3758 3.8806-1.9756 6.1031-0.59972 2.2225-1.7286 6.35-2.5047 9.1369-1.5522 5.5739-1.6581 6.3853-0.91722 6.3853 1.6933 0 5.2917-8.3608 7.4789-17.533 1.0231-4.2333 0.91722-6.1031-0.38806-6.1031-0.635 0-0.98778 0.42333-1.6933 2.0108z\" />\n                      <path d=\"m40.093 55.296c-2.1519 2.3636-5.6444 9.0311-6.9497 13.335-1.3406 4.4097-1.9403 7.6906-2.5047 13.406-0.81139 7.9022-3.6689 18.309-6.7028 24.377-1.3406 2.6106-1.5169 3.4925-0.74083 3.4925 1.1994 0 7.5494-8.3962 11.042-14.605 6.6675-11.853 9.7367-22.013 9.7719-32.314 0.03528-4.4097-0.03528-4.9036-0.84667-6.5264-1.0231-2.0461-1.9403-2.3989-3.0692-1.1642z\" />\n                      <path d=\"m32.403 99.569c-1.7286 2.6106-3.3161 4.9742-3.5278 5.1859-0.74083 0.74084-3.2103 4.2686-3.4572 4.9036-0.42333 1.1642 1.1994 0.3175 3.2103-1.6228 3.9864-3.9159 6.35-6.9145 7.0908-9.1723 0.84667-2.4342 0.9525-4.1275 0.3175-4.1275-0.24694 0-1.8697 2.1872-3.6336 4.8331z\" />\n                      <path d=\"m32.579 105.74c-2.4342 3.7395-5.0447 11.324-5.5033 15.981-0.10583 1.3053 0.03528 3.175 0.35278 4.9389 0.98778 5.0448 0.59972 7.7259-1.5522 10.336-1.2347 1.5169-1.3406 2.1872-0.35278 2.1872 1.0231 0 0.84667 0.45861-0.45861 1.0936-0.88194 0.42333-1.5169 1.3406-2.9633 4.1275-2.1872 4.2333-2.3283 5.0094-0.81139 5.0094 1.2347 0 2.5047-1.5522 5.2917-6.5617 2.0108-3.6336 2.1519-4.1628 0.88194-3.9511-0.49389 0.10583-0.88194 0.14111-0.88194 0.0706 0-0.10583 0.77611-0.635 1.7639-1.2347 2.1872-1.3406 4.5508-4.0217 5.8561-6.6322 1.2347-2.4694 1.27-4.7272 0.14111-8.6784-0.70556-2.5047-0.77611-3.2808-0.56444-7.232 0.17639-3.9158 0.42333-6.1031 1.0936-10.16 0.3175-1.8345-0.84667-1.4817-2.2931 0.70556z\" />\n                    </g>\n                  </svg>\n\n                  <svg\n                    data-position=\"right-palm\"\n                    id=\"right-palm\"\n                    className=\"right-palm\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"90\"\n                    height=\"198.938\"\n                    viewBox=\"0 0 90 38.938\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'right-palm'\n                        });\n                      }}\n                      transform=\"translate(-128.43 -46.413)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m128.48 46.824c0.635 1.6581 2.5047 7.3378 3.3161 9.9483 1.658 5.3269 3.1397 6.2089 7.0908 4.0922 1.7639-0.9525 2.2931-1.0583 5.08-1.0583 2.6106 0 3.1397-0.10583 3.1397-0.52917 0-0.3175-1.5522-2.1167-3.422-3.9864-3.4925-3.4925-6.35-5.3622-8.1844-5.3622-1.1994-0.03528-3.422-1.0583-5.1153-2.4342-1.4464-1.1289-2.152-1.4111-1.905-0.67028z\" />\n                      <path d=\"m140.76 60.935c0 0.635 1.7992 3.4572 2.6811 4.1981 0.74083 0.635 6.2442 2.0814 7.9022 2.0814 1.3053 0 3.175-1.5522 3.175-2.6106 0-0.59972-0.70556-1.0583-3.4572-2.3283-3.175-1.4464-3.6689-1.5875-6.8439-1.6933-2.787-0.10583-3.4572-0.03528-3.4572 0.35278z\" />\n                      <path d=\"m137.4 62.1c-1.27 0.59972-3.0692 0.67028-3.5983 0.14111-0.21166-0.21167-0.74083-0.3175-1.1642-0.24694-1.1289 0.14111-1.7992 2.2578-1.8697 5.9267-0.0353 2.4342 0.0706 3.2103 0.59973 4.0569 1.1289 1.7286 2.4342 2.9986 3.1044 2.9986 0.52917 0 0.56445 0.10583 0.21167 0.88194-0.35278 0.74083-0.0353 1.5875 2.6458 7.0908 3.1044 6.4558 3.6689 7.1614 5.6092 7.1967 1.8697 0 1.6228-1.1642-1.5875-7.7964-3.0692-6.2794-4.1628-8.0786-5.0094-8.0786-0.35277 0-0.14111-0.70556 0.67028-2.3989 0.635-1.3053 1.27-2.6811 1.4111-3.1044 0.10584-0.38806 0.635-1.1289 1.1642-1.5875l0.91722-0.84667-0.45861 0.84667c-0.21167 0.45861-0.35278 1.1642-0.28222 1.6228 0.14111 0.635 0.0353 0.74083-0.49389 0.59972-0.49389-0.10583-0.81139 0.21167-1.3406 1.3758-0.38805 0.84667-0.70555 1.8344-0.70555 2.1872 0 0.3175 1.1994 2.8575 2.6811 5.6444 1.5169 2.7517 3.4219 6.3147 4.2686 7.9022 1.5875 2.9986 2.1872 3.4925 4.0217 3.2103 1.8697-0.24694 0.91722-3.9864-2.3636-9.1722-0.45862-0.74083-0.74084-1.3406-0.59973-1.3406 0.17639 0.03528 1.0583 1.2347 1.9756 2.6811 1.5169 2.3283 1.8344 2.6458 2.6458 2.54s0.9525-0.28222 1.0583-1.3758c0.10583-1.3406-0.91723-3.5983-5.0094-10.901-2.7517-4.9036-3.2808-5.6444-4.198-5.6797-0.42334 0-0.56445-0.10583-0.3175-0.21167 0.635-0.24694 0.49388-1.5169-0.38806-3.1044s-1.8344-1.8697-3.5983-1.0583z\" />\n                    </g>\n                  </svg>\n                  <svg\n                    data-position=\"left-palm\"\n                    id=\"left-palm\"\n                    className=\"left-palm\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"90\"\n                    height=\"198.938\"\n                    viewBox=\"0 0 90 38.938\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'left-palm'\n                        });\n                      }}\n                      transform=\"translate(-10.122 -17.949)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m39.381 19.836c-2.4342 3.7394-5.0447 11.324-5.5033 15.981-0.10583 1.3053 0.03528 3.175 0.35278 4.9389 0.98778 5.0447 0.59972 7.7258-1.5522 10.336-1.2347 1.5169-1.3406 2.1872-0.35278 2.1872 1.0231 0 0.84667 0.45861-0.45861 1.0936-0.88194 0.42333-1.5169 1.3406-2.9633 4.1275-2.1872 4.2333-2.3283 5.0094-0.81139 5.0094 1.2347 0 2.5047-1.5522 5.2917-6.5617 2.0108-3.6336 2.1519-4.1628 0.88194-3.9511-0.49389 0.10583-0.88194 0.14111-0.88194 0.07056 0-0.10583 0.77611-0.635 1.7639-1.2347 2.1872-1.3406 4.5508-4.0217 5.8561-6.6322 1.2347-2.4694 1.27-4.7272 0.14111-8.6783-0.70556-2.5047-0.77611-3.2808-0.56444-7.2319 0.17639-3.9158 0.42333-6.1031 1.0936-10.16 0.3175-1.8344-0.84667-1.4817-2.2931 0.70556z\" />\n                      <path d=\"m34.795 23.823c-2.2225 1.8344-4.4097 2.9986-5.6797 2.9986-0.45861 0-1.4817 0.3175-2.2578 0.67028-2.2225 1.0231-9.3486 7.7258-9.3486 8.8194 0 0.24694 1.0231 0.35278 3.1044 0.3175 2.8928-0.07056 3.2103 0 5.1153 1.0583 4.0217 2.2578 5.5386 1.3406 7.3025-4.6214 1.1289-3.6689 1.7992-5.6797 3.1397-8.9958 0.38806-0.98778 0.70556-1.8344 0.635-1.8344-0.03528 0-0.9525 0.70556-2.0108 1.5875z\" />\n                      <path d=\"m14.333 38.992c-1.8344 0.88194-3.5631 1.5875-3.7747 1.5875-0.59972 0-0.56444 1.4111 0 2.1167 0.635 0.77611 1.905 1.4111 2.7517 1.4111 1.4817 0 7.1967-1.5169 7.8669-2.0814 1.1289-0.9525 2.6811-3.2808 2.6811-3.9864 0-0.56444-0.3175-0.635-3.0692-0.635-2.9281 0-3.2808 0.07056-6.4558 1.5875z\" />\n                      <path d=\"m23.682 39.98c-0.49389 0.84667-0.88194 1.8344-0.88194 2.1872 0 0.35278-0.21167 0.81139-0.49389 1.0231-0.56444 0.42333-2.1872 3.2456-4.8331 8.3256-0.84667 1.6581-1.6581 3.0692-1.7639 3.175-0.42333 0.35278-1.6581 3.0339-1.905 4.1275-0.3175 1.6228 0.07056 2.5753 1.0583 2.5753 0.635 0 1.1994-0.56444 2.5047-2.6458 0.91722-1.4464 1.7286-2.6458 1.7639-2.6458 0.07056 0-0.84667 2.0108-2.0461 4.445-2.0814 4.2333-2.1519 4.4803-1.6581 5.3622 0.635 1.1289 1.7992 1.3758 2.9281 0.635 0.49389-0.28222 2.1519-3.0339 3.9158-6.4558 1.6933-3.2456 3.2103-6.1031 3.4219-6.2794 0.17639-0.21167-0.9525 2.3283-2.54 5.6092-3.0339 6.35-3.3161 7.62-1.5875 7.62 2.0108 0 2.3636-0.42333 5.6092-6.9144 2.7517-5.6092 3.0692-6.4206 2.7517-7.3025-0.3175-0.81139-0.28222-0.9525 0.28222-0.9525 1.0583 0 2.8222-2.1519 3.3867-4.1628 0.45861-1.5522 0.49389-2.3636 0.17639-4.6919-0.56444-4.2686-0.9525-4.6919-3.4572-3.7747-0.98778 0.35278-1.4817 0.35278-2.8928-0.17639-2.4342-0.84667-2.7164-0.77611-3.7394 0.91722z\" />\n                    </g>\n                  </svg>\n\n                  <svg\n                    data-position=\"left-leg\"\n                    id=\"left-leg\"\n                    className=\"left-leg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"93.626\"\n                    height=\"250.625\"\n                    viewBox=\"0 0 93.626 250.625\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'left-leg'\n                        });\n                      }}\n                      transform=\"translate(-61.646 -25.834)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m64.283 26.259c-0.07056 0.24694-0.52917 3.7042-1.0583 7.6906-0.49389 3.9864-1.0583 8.0081-1.2347 8.9253-0.45861 2.2225-0.45861 14.852 0 19.65 0.17639 2.0461 0.49389 5.8561 0.70556 8.4667 0.70556 8.8194 3.3514 25.753 4.0922 26 0.28222 0.10583 0.45861-7.1967 0.59972-25.365 0.17639-20.92 0.10583-26.458-0.3175-30.798-0.52917-5.4328-1.4111-12.806-1.7286-14.217-0.21167-0.84667-0.81139-1.0583-1.0583-0.35278z\" />\n                      <path d=\"m129.94 27.318c-0.10584 0.635-0.42334 3.2103-0.74084 5.7503-0.28222 2.5047-0.74083 5.6797-0.9525 7.0556-0.45861 2.6106-0.52916 7.1967-0.35277 38.206 0.0353 14.605 0.17638 18.45 0.52916 18.344 0.21167-0.10583 0.52917-0.88194 0.67028-1.7286 3.4219-20.779 4.2333-29.21 4.2686-42.474 0.0353-8.4314-0.0353-9.2075-1.27-17.357-0.70555-4.7272-1.3053-8.6431-1.3053-8.7489s-0.14111-0.17639-0.3175-0.17639-0.38805 0.52917-0.52916 1.1289z\" />\n                      <path d=\"m67.635 32.821c0 0.52917 0.24694 3.8453 0.52917 7.3025 0.45861 5.2211 0.52917 9.6661 0.3175 24.871-0.28222 22.966 0.03528 29.704 1.9756 43.039 2.2931 15.558 3.9158 28.752 4.1275 33.585 0.10583 2.5047 0.35278 4.5156 0.49389 4.5156 0.17639 0 1.3053-1.7286 2.5047-3.8806 1.2347-2.1167 2.6458-4.6214 3.175-5.5386 1.5875-2.7517 4.1275-8.7842 4.9036-11.571 2.3283-8.5373 2.7517-27.552 0.81139-39.335-0.52917-3.2456-4.2333-14.746-7.5494-23.46-2.4342-6.3853-5.9267-16.51-7.9375-23.213-1.0583-3.4925-2.0814-6.5264-2.3283-6.8086-0.635-0.77611-1.0231-0.59972-1.0231 0.49389z\" />\n                      <path d=\"m126.58 32.327c-0.21167 0.28222-1.3053 3.3867-2.3636 6.9497-2.1167 7.0556-8.2197 24.73-8.6078 25.012-0.35278 0.24694-5.1858 14.288-5.9972 17.427-2.9986 11.748-2.7164 35.595 0.56444 45.332 0.91722 2.6811 4.8683 11.324 5.3622 11.677 0.14111 0.10584 1.1994 1.7992 2.3283 3.81s2.0814 3.5984 2.1519 3.5278c0.0706-0.0705 0.3175-2.1872 0.52917-4.692 0.52916-6.5264 1.8697-17.18 3.8806-31.292 2.2931-15.804 2.6106-22.155 2.2578-45.967-0.17639-14.922-0.14111-18.733 0.38806-24.659 0.56444-6.8439 0.45861-8.2903-0.49389-7.1261z\" />\n                      <path d=\"m70.457 33.209c0 1.5522 3.3867 11.818 6.2089 18.803 5.9619 14.746 12.806 34.008 16.651 46.778 1.27 4.2686 1.4817 3.2456 2.3636-11.924 0.67028-11.43 1.0583-30.339 0.635-30.903-0.14111-0.21167-1.6228-1.3758-3.2808-2.54-1.6581-1.1994-3.2456-2.3989-3.5278-2.6458-0.28222-0.24694-2.1872-1.8344-4.2333-3.4925-4.1981-3.3867-10.407-9.7367-12.524-12.735-1.4464-2.0461-2.2931-2.54-2.2931-1.3406z\" />\n                      <path d=\"m122.49 34.444c-3.81 5.1506-9.0664 10.301-16.016 15.628-2.2225 1.7286-4.833 3.7394-5.8208 4.5508l-1.7992 1.4111 0.07056 10.231c0 5.6092 0.28222 14.57 0.59972 19.897 0.81139 13.582 0.91722 14.817 1.4817 14.817 0.28222 0 0.49389-0.21166 0.49389-0.49389 0-1.905 9.5603-29.598 14.711-42.545 1.6581-4.1628 3.6336-9.1722 4.4097-11.113 1.4817-3.8453 4.1628-12.594 4.1628-13.617 0-1.1994-0.84667-0.70556-2.2931 1.2347z\" />\n                      <path d=\"m103.62 96.639c-4.8331 15.064-5.9267 33.832-2.7869 48.013 0.88194 4.057 1.8344 7.1262 2.2225 7.1262 0.28222 0 0.56444-1.6933 0.84666-5.2211 0.49389-5.962 1.3406-10.442 2.9281-15.275l1.1289-3.422-0.77611-4.8684c-1.0936-6.7381-1.0583-6.3853-1.3053-18.768-0.24694-12.629-0.42333-13.264-2.2578-7.5847z\" />\n                      <path d=\"m89.366 104.58c-0.24694 11.853-0.45861 16.157-0.88194 16.157-0.14111 0-0.45861 1.6934-0.74083 3.7395-0.38806 3.1045-0.38806 3.9864 0 5.0448 0.24694 0.70556 0.56444 1.3406 0.67028 1.4464 0.81139 0.59972 2.7517 11.36 3.0692 17.004 0.17639 2.4342 0.38806 3.81 0.635 3.81 0.88194 0 3.0692-9.8778 3.7394-16.722 0.52917-5.4328 0.28222-16.722-0.49389-22.013-0.77611-5.08-2.1872-11.218-3.5983-15.699-1.9756-6.0678-2.1519-5.5386-2.3989 7.232z\" />\n                      <path d=\"m85.344 130.72c-0.70556 0.81139-2.2225 6.7381-2.9281 11.36-0.38806 2.5047-0.88194 5.2564-1.0583 6.1031-0.42333 1.9403-0.42333 10.513 0.03528 13.265 0.17639 1.1642 0.49389 3.9864 0.70556 6.2089 0.74083 7.5848 2.4694 18.838 2.9986 19.368 0.70556 0.70556 0.67028 0.77611 1.7639-8.0786 1.3758-11.218 2.54-18.944 3.2103-21.52 1.3053-5.08-0.28222-19.579-2.7517-25.506-0.74083-1.6933-1.3053-2.0461-1.9756-1.1994z\" />\n                      <path d=\"m107.89 132.16c-1.023 2.7164-1.6933 5.6092-2.1519 9.0312-0.21167 1.6581-0.56445 4.0217-0.74083 5.2917-0.49389 2.9634-0.24695 9.0312 0.49388 12.171 0.59973 2.54 1.6933 10.372 3.1397 22.119 0.52916 4.5509 0.91722 6.6322 1.1994 6.6322 0.59972 0 0.67028-0.35278 1.6933-7.0556 2.0461-13.441 2.5047-18.239 2.5047-25.753-0.0353-5.9972-0.17639-7.9375-0.81139-11.465-1.5522-8.2198-3.0339-12.876-4.0922-12.876-0.3175 0-0.81139 0.77611-1.2347 1.905z\" />\n                      <path d=\"m78.324 143.73c-2.9986 5.2917-5.2564 11.853-6.4911 18.803-0.9525 5.5034-1.0231 15.099-0.17639 20.814 1.8344 11.889 8.3608 32.279 12.806 39.864 0.67028 1.1642 2.3989 3.3161 3.7747 4.7625 4.2686 4.445 6.6675 7.0556 6.4911 7.0556-0.59972 0-9.1722-8.6783-10.054-10.16-1.6581-2.8222-2.3989-1.6581-2.1519 3.4572 0.17639 3.8453 0.67028 4.692 5.1153 8.6431 3.8806 3.4219 4.5861 4.445 6.0678 8.7842 0.77611 2.2225 1.3406 3.3867 1.6933 3.3867 0.45861 0 0.49389-0.88194 0.38806-6.2794-0.10583-3.422-0.28222-6.5264-0.42333-6.8792-0.21167-0.42333-0.14111-0.59972 0.28222-0.59972 0.35278 0 0.56444-0.28223 0.56444-0.81139 0-1.6228-1.7639-8.0433-3.2103-11.571-1.4817-3.5983-1.4817-3.7394-1.4817-7.7258 0.03528-4.8683 0.38806-7.9728 2.4342-22.895 1.9756-14.605 2.0108-15.663 0-22.648-0.84667-2.9986-1.7286-6.35-1.9756-7.4789-0.49389-2.152-1.2347-2.6458-1.5522-1.0583-0.67028 3.3867-3.7394 27.87-3.9511 31.503-0.28222 5.3622 0.35278 15.593 1.3053 21.096 0.35278 2.2225 0.59972 4.1275 0.49389 4.2333-0.10583 0.10583-0.17639-0.14111-0.17639-0.56445 0-0.38805-0.17639-0.84666-0.35278-0.9525-0.21167-0.14111-0.28222-0.35277-0.17639-0.52916 0.10583-0.14111-0.14111-1.7639-0.49389-3.5983-0.84667-4.0922-2.0461-12.453-2.3283-16.51-0.35278-4.5861-0.77611-7.6553-2.7164-19.932-1.7992-11.077-1.8344-11.43-1.8344-19.226-0.03528-4.3745 0.10583-9.6309 0.24694-11.748 0.35278-4.692-0.03528-4.9036-2.1167-1.2347z\" />\n                      <path d=\"m114.8 144.97c0.14111 2.1167 0.28222 7.3731 0.24694 11.748-0.0353 7.8317-0.0706 8.1139-2.0108 20.461-1.0936 6.8792-2.1519 14.499-2.3636 16.933-0.56445 6.9497-1.3758 12.806-2.5047 18.521-0.56445 2.8928-1.1289 5.3269-1.1994 5.4328-0.28222 0.24694-0.21166-0.49389 0.3175-3.0339 0.98778-4.7625 1.4111-10.301 1.4111-18.274 0-7.867-0.0705-8.5372-1.8344-21.343-1.0231-7.2673-1.9403-13.653-2.0461-14.217-0.28223-1.3758-1.0936-1.1642-1.3758 0.35278-0.14111 0.74083-0.98777 3.81-1.8697 6.8086-1.6228 5.4328-1.6581 5.5034-1.6228 10.407 0 3.5984 0.3175 7.0203 1.1289 12.524 1.7639 12.03 2.54 19.262 2.54 23.883 0 4.2333-0.0353 4.4097-1.4464 7.9022-0.77611 1.9756-1.7992 5.1858-2.2931 7.1614-1.4464 6.0325-1.0936 6.4206 2.3283 2.7517 1.2347-1.3053 3.3867-3.5631 4.7625-5.0094 2.7517-2.8928 4.3392-5.5033 6.8086-11.042 3.422-7.7964 8.5372-25.188 9.8425-33.479 0.84667-5.6092 0.77612-15.17-0.21166-20.92-1.0583-5.9973-3.0339-11.924-5.715-17.145-2.8222-5.4328-3.2808-5.5034-2.8928-0.42334z\" />\n                      <path d=\"m110.36 225.09c-1.0231 1.5875-4.5861 5.2917-8.5725 8.89-1.0583 0.91722-1.7992 1.9756-2.0461 2.7869-0.17639 0.70556-0.35278 3.8453-0.35278 6.985 0 6.8439 0.38806 7.3731 1.905 2.6458 1.3406-4.1275 2.3989-6.1383 3.81-7.1967 0.67028-0.49389 2.4694-2.152 4.0569-3.6689 3.2456-3.175 3.6336-4.057 3.6336-8.3256 0-4.3744-0.635-4.9036-2.4342-2.1167z\" />\n                    </g>\n                  </svg>\n                  <svg\n                    data-position=\"left-foot\"\n                    id=\"left-foot\"\n                    className=\"left-foot\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 30 30\">\n                    <g\n                      onClick={() => {\n                        setaccidentForm({\n                          ...accidentForm,\n                          bodyPart: 'left-foot'\n                        });\n                      }}\n                      transform=\"translate(-50.42 -18.279)\"\n                      stroke-width=\".035278\">\n                      <path d=\"m55.258 21.912c0 2.4694-0.24694 4.7272-0.84667 7.2672-0.98778 4.3744-0.9525 4.5156 2.4694 7.3731 4.9742 4.1981 8.1139 7.62 9.2075 10.019 0.24694 0.56444 0.635 0.98778 0.91722 0.98778 0.35278 0 0.45861-1.1289 0.45861-5.4681 0-5.3269-0.03528-5.5386-1.2347-9.0664-2.0108-5.8914-2.7517-7.1261-6.7028-11.112-1.9756-2.0108-3.7394-3.6336-3.9158-3.6336s-0.3175 1.6228-0.35278 3.6336z\" />\n                      <path d=\"m79.247 21.56c-1.7639 1.7992-3.4925 3.7042-3.8453 4.3039-0.38806 0.56444-0.77611 1.1289-0.91722 1.2347-0.10583 0.10583-0.91722 2.0108-1.7286 4.2333l-1.5522 4.0569-0.14111 6.0678c-0.07056 3.7394 0 6.1031 0.21167 6.1031 0.17639 0 0.77611-0.67028 1.3053-1.5169 0.52917-0.81139 1.3053-1.8344 1.6933-2.2578 0.38806-0.42333 0.88194-1.1289 1.0936-1.5875 0.21167-0.42333 2.2931-2.3636 4.5861-4.3392 2.3283-1.9403 4.3744-3.8806 4.5508-4.3392 0.28222-0.56444 0.14111-1.7286-0.49389-4.4097-0.59972-2.54-0.84667-4.6567-0.84667-7.1967 0-2.2225-0.14111-3.6336-0.35278-3.5983-0.17639 0-1.7992 1.4817-3.5631 3.2456z\" />\n                      <path d=\"m84.292 35.6c-0.45861 0.9525-1.5169 2.0461-3.4925 3.5278-4.4803 3.4572-4.8331 4.5156-3.3514 11.077l0.77611 3.5278 1.4464 0.10583c1.0583 0.07055 1.5875-0.07056 2.0814-0.635 0.35278-0.38806 0.77611-0.70556 0.91722-0.70556 0.42333 0 3.4925-2.2225 3.4925-2.5047 0-0.17639 0.45861-0.74083 1.0231-1.27l1.0231-0.98778-0.28222-3.7042c-0.17639-2.2578-0.635-4.8683-1.1994-6.6675-0.49389-1.6581-0.91722-3.0339-0.91722-3.1044 0-0.07056-0.21167-0.10583-0.42333-0.10583-0.24694 0-0.74083 0.67028-1.0936 1.4464z\" />\n                      <path d=\"m52.542 34.753c-0.67028 1.0583-1.9756 7.4789-2.0814 10.019-0.10583 2.9281-0.07056 3.0692 0.9525 4.2333 1.2347 1.3758 3.8453 3.4925 4.3039 3.4925 0.21167 0 0.635 0.3175 0.98778 0.70556 0.49389 0.56444 1.0231 0.70556 2.0814 0.635l1.4464-0.10583 0.77611-3.7042c1.3758-6.5617 1.1642-7.3731-3.0692-10.583-1.5875-1.1994-3.2456-2.7869-3.7747-3.5631-0.88194-1.3406-1.3053-1.6228-1.6228-1.1289z\" />\n                      <path d=\"m62.878 46.148c0 1.1642-0.24694 3.5631-0.56444 5.2917-0.70556 4.1628-0.56444 5.5739 0.59972 6.4206 1.3053 0.98778 3.5631 1.2347 4.3392 0.45861 0.49389-0.52917 0.56444-1.1642 0.49389-4.1981-0.10583-2.9281-0.28222-3.9158-1.0231-5.5033-0.91722-1.9756-2.9281-4.5861-3.5278-4.5861-0.17639 0-0.3175 0.9525-0.3175 2.1167z\" />\n                      <path d=\"m73.074 46.219c-1.8344 2.8575-2.3989 5.0094-2.3283 8.9253l0.07055 3.175 1.3406 0.3175c1.0936 0.28222 1.6228 0.21167 2.8928-0.42333 1.5522-0.74083 1.5875-0.81139 1.5875-2.4342 0-0.9525-0.24694-3.0339-0.52917-4.6919-0.28222-1.6581-0.52917-3.9158-0.52917-5.0447 0-2.7164-0.67028-2.6458-2.5047 0.17639z\" />\n                    </g>\n                  </svg>\n\n                  <div id=\"area\">\n                    Body part Injured:{' '}\n                    <span id=\"data\">{accidentForm.bodyPart}</span>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\nexport default HealthSafety;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page6.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart1.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/StaffView.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart2.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Chart3.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Auth/Auth.js",["335","336","337","338","339"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/reports/Reports.js",["340","341","342","343","344","345","346","347","348"],"import React, { Fragment, useEffect, useState } from 'react';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nconst colors = {\n    1: 'orange',\n    2: 'red',\n    3: 'yellow',\n    4: 'green',\n    5: 'purpole',\n    6: 'red',\n    7: 'red',\n    8: 'grey',\n    0: 'grey'\n  };\n\nconst Reports = () => {\n  const [machines, setMachines] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [isLoadingMachines, setLoadingMachines] = useState(true);\n  const data = {\n    labels: [],\n    datasets: [\n        {\n        label: 'Machines Target Graph',\n        data: [],\n        backgroundColor: [],\n        },\n    ],\n  };\n    const options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n  \nconst getAllMachines = async () => {\n    try {\n      const response = await Axios.get(\n        baseUrl + '/machines/getAllMachinesWithAnyStatus',\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n          }\n        }\n      );\n\n      console.log('Machines');\n      console.log(response.data);\n\n      setLoadingMachines(false);\n        setMachines(response.data);\n        console.log(\"machines targets\")\n        console.log(response.data)\n        response.data.forEach(machine => {\n            data.labels.push(machine.name);\n            data.datasets[0].data.push(machine.target);\n            data.datasets[0].backgroundColor.push(`${colors[machine.status]}`);\n        });\n        console.log(\"machines charts data\")\n        console.log(data)\n        setChartData(data)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(async () => {\n    if (isLoadingMachines) {\n        getAllMachines();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Nav></Nav>\n      <Container></Container>\n      <div style={{ margin: 50 }}>\n        <h3>Machines Target Graph</h3>\n       <Bar data={chartData} options={options} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Reports;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/login/Form.js",["349","350"],"import React, { useState } from 'react'\nimport Nav from '../Header/Header'\nimport { useSpring, animated } from \"react-spring\";\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap'\nimport './Form.css'\nconst Form = () => {\n    const [registrationFormStatus, setRegistartionFormStatus] = useState(false);\n    const loginProps = useSpring({\n        left: registrationFormStatus ? -500 : 0, // Login form sliding positions\n    });\n    const registerProps = useSpring({\n        left: registrationFormStatus ? 0 : 500, // Register form sliding positions \n    });\n\n    const loginBtnProps = useSpring({\n        borderBottom: registrationFormStatus\n            ? \"solid 0px transparent\"\n            : \"solid 2px #1059FF\",  //Animate bottom border of login button\n    });\n    const registerBtnProps = useSpring({\n        borderBottom: registrationFormStatus\n            ? \"solid 2px #1059FF\"\n            : \"solid 0px transparent\", //Animate bottom border of register button\n    });\n\n    function registerClicked() {\n        setRegistartionFormStatus(true);\n    }\n    function loginClicked() {\n        setRegistartionFormStatus(false);\n    }\n\n    return (\n        <div>\n            <Nav></Nav>\n            <Container >\n                <h1 className='p-4 text-center'>Register</h1>\n                <Row className='mt-3'>\n                    <Col sm={12} md={{ span: 10, offset: 1 }} >\n                        <div className=\"login-register-wrapper\">\n                            <div className=\"nav-buttons\">\n                                <animated.button\n                                    onClick={loginClicked}\n                                    id=\"loginBtn\"\n                                    style={loginBtnProps}\n                                    className='btn btn-block scroll-btn'\n                                >\n                                    Login\n                                </animated.button>\n                                <animated.button\n                                    onClick={registerClicked}\n                                    id=\"registerBtn\"\n                                    style={registerBtnProps}\n                                    className='btn btn-block scroll-btn'\n                                >\n                                    Register\n                                </animated.button>\n                            </div>\n                            <div className=\"form-group form-group1 \">\n                                <animated.form action=\"\" id=\"loginform\" style={loginProps}>\n                                    <LoginForm />\n                                </animated.form>\n                                <animated.form action=\"\" id=\"registerform\" style={registerProps}>\n                                    <RegisterForm />\n                                </animated.form>\n                            </div>\n                            <animated.div className=\"forgot-panel\" style={loginProps}>\n                                <a herf=\"#\">Forgot your password</a>\n                            </animated.div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\nfunction LoginForm() {\n    return (\n        <React.Fragment>\n            <label for=\"username\">USERNAME</label>\n            <input type=\"text\" id=\"username\" />\n            <label for=\"password\">PASSWORD</label>\n            <input type=\"text\" id=\"password\" />\n            <input type=\"submit\" value=\"submit\" className=\"submit\" />\n        </React.Fragment>\n    );\n}\n\nfunction RegisterForm() {\n    return (\n        <React.Fragment>\n            <label for=\"fullname\">full name</label>\n            <input type=\"text\" id=\"fullname\" />\n            <label for=\"email\">email</label>\n            <input type=\"text\" id=\"email\" />\n            <label for=\"password\">password</label>\n            <input type=\"text\" id=\"password\" />\n            <label for=\"confirmpassword\">confirm password</label>\n            <input type=\"text\" id=\"confirmpassword\" />\n            <input type=\"submit\" value=\"submit\" class=\"submit\" />\n        </React.Fragment>\n    );\n}\n\n\nexport default Form\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Emp_view/Emp.js",["351","352","353","354"],"import React, { Component } from 'react';\nimport Nav from '../Header/Header';\nimport ReactTable from 'react-table-6';\nimport axios from 'axios';\nimport {\n  updateOrderAcceptOrReject,\n  processedOrder,\n  pieChartOrders,\n  wipOrder,\n  plannedOrder\n} from '../../actions/staffAction';\nimport { baseUrl } from './../../baseUrl';\nimport { connect } from 'react-redux';\nimport { OnlyLoadUser } from '../../actions/authActions';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  ProgressBar,\n  Form,\n  Button,\n  Modal\n} from 'react-bootstrap';\nimport './Emp.css';\nimport MyChart from '../../components/Dashboard/Chart3';\nclass Emp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          Header: 'Order Id',\n          accessor: 'order',\n          width: 150,\n          Cell: (row) => row?.value\n        },\n        {\n          Header: 'Quantity',\n          accessor: 'count',\n          width: 150,\n          Cell: (row) => row?.value\n        },\n        {\n          Header: 'Assigned By',\n          accessor: 'assignedBy',\n          width: 150,\n          Cell: (row) => row?.value\n        },\n        {\n          Header: 'Status',\n          accessor: 'status',\n          width: 150,\n          Cell: (row) =>\n            row?.value === 0\n              ? 'Started'\n              : row?.value === 1\n              ? 'Work in Progress'\n              : row?.value === 2\n              ? 'Done'\n              : row?.value === 3\n              ? 'Accepted'\n              : row?.value === 4 && 'Rejected'\n        },\n        {\n          Header: 'Product',\n          accessor: 'product',\n          width: 150,\n          Cell: (row) => row?.value\n        },\n        {\n          Header: 'Price',\n          accessor: 'price',\n          width: 150,\n          Cell: (row) => row?.value\n        },\n        {\n          Header: 'Action',\n          accessor: 'action',\n          width: 250,\n          Cell: (row) => {\n            console.log(row);\n            if (row?.original.status <= 2) {\n              return (\n                <>\n                  <Button\n                    variant=\"secondary\"\n                    type=\"button\"\n                    onClick={async (e) => {\n                      const preData = {\n                        id: row?.original.order,\n                        status: 3\n                      };\n                      await this.props.updateOrderAcceptOrReject(preData);\n                      await this.getMyOrders();\n                    }}>\n                    Accept\n                  </Button>{' '}\n                  <Button\n                    variant=\"secondary\"\n                    type=\"button\"\n                    onClick={async (e) => {\n                      const preData = {\n                        id: row?.original.order,\n                        status: 0\n                      };\n                      await this.props.updateOrderAcceptOrReject(preData);\n                      await this.getMyOrders();\n                    }}>\n                    Reject\n                  </Button>\n                </>\n              );\n            } else if (row?.original.status > 2) {\n              return 'Processed';\n            }\n          }\n        }\n      ],\n      tasks: [],\n      task: '',\n      displayNameChange: null,\n      emailChange: null,\n      email: 'Loading',\n      displayName: 'Loading',\n      type: 'Loading',\n      accountStatus: 'Loading',\n      isError: false,\n      error: '',\n      isLoading: false,\n      show: false,\n      orders: []\n    };\n    this.handleAddNewTask = this.handleAddNewTask.bind(this);\n    this.markTaskComplete = this.markTaskComplete.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRequestChangeAccountDetails =\n      this.handleRequestChangeAccountDetails.bind(this);\n  }\n  componentWillMount() {\n    this.props.processedOrder();\n  }\n  handleRequestChangeAccountDetails = (e) => {\n    const { emailChange, displayNameChange } = this.state;\n    const dataToSend = {\n      email: emailChange === null ? this.props.user.email : emailChange,\n      displayName:\n        displayNameChange === null\n          ? this.props.user.displayName\n          : displayNameChange\n    };\n    axios\n      .post(baseUrl + '/auth/requestAccountChangeDetails', dataToSend, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then(async (response) => {\n        await this.props.OnlyLoadUser();\n        this.setState({\n          show: false\n        });\n        console.log({ response });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  };\n  getMe = () => {\n    axios\n      .get(baseUrl + '/auth/getMe', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        const data = response.data.data;\n        let accountStatus;\n        if (data.status == true) {\n          accountStatus = 'Active';\n        } else {\n          accountStatus = 'Pending';\n        }\n        this.setState({\n          displayName: data.displayName,\n          email: data.email,\n          displayNameChange: data.displayName,\n          emailChange: data.email,\n          type: data.type,\n          accountStatus: accountStatus\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n  getMyOrders = () => {\n    this.setState({\n      isLoading: true\n    });\n    axios\n      .get(baseUrl + '/orders/getEmployeeOrders', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        const data = response.data.data;\n        let orders = [];\n\n        data.forEach((order) => {\n          orders.push({\n            order: order._id,\n            count: order.count,\n            status: order.status,\n            assignedBy: order.assignedBy.displayName,\n            product: order.product.name,\n            price: order.price\n          });\n        });\n        this.setState({\n          orders,\n          isLoading: false\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n\n  markTaskComplete = (id) => (e) => {\n    e.preventDefault();\n    const dataToSend = {\n      id\n    };\n    axios\n      .post(baseUrl + '/tasks/markCompleted', dataToSend, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        this.getAllTasks();\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n  getAllTasks = () => {\n    axios\n      .get(baseUrl + '/tasks/getAllTasks', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        this.setState({\n          tasks: response.data.data\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n  handleAddNewTask = (e) => {\n    const { task } = this.state;\n    if (task == '') {\n      return;\n    }\n    let dataTosend = {\n      task: task\n    };\n    this.setState({\n      isLoading: true,\n      task: ''\n    });\n    axios\n      .post(baseUrl + '/tasks/createTask', dataTosend, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        this.setState({\n          isLoading: false\n        });\n        this.getAllTasks();\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n  componentDidMount() {\n    this.getAllTasks();\n    this.getMe();\n    this.getMyOrders();\n    this.props.pieChartOrders();\n    this.props.plannedOrder();\n    this.props.wipOrder();\n  }\n  render() {\n    return (\n      <div>\n        <Nav></Nav>\n        <Container>\n          <h1>Employee view </h1>\n          <Row>\n            <Col md={12} sm={12}>\n              <Row className=\"mt-3\">\n                <Col md={6} sm={12}>\n                  <div className=\"bg-danger d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        My Details\n                      </span>\n                      <span className=\"text-white\">\n                        Name : {this.props.user.displayName}\n                      </span>\n                      <span className=\"text-white\">\n                        Email : {this.props.user.email}\n                      </span>\n                      <span className=\"text-white\">\n                        Account Type : {this.props.user.type}\n                      </span>\n                      {/* <span className=\"text-white\">\n                        Account Status : {this.props.user.accountStatus}\n                      </span> */}\n                    </div>\n                    <div>\n                      <i\n                        onClick={(e) => {\n                          this.setState({\n                            show: true\n                          });\n                        }}\n                        className=\"fa fa-pencil-alt fa-2x text-white\"\n                        style={{ cursor: 'pointer' }}></i>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} sm={12}>\n                  <div className=\"bg-success d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        {this.props.order}\n                      </span>\n                      <span className=\"text-white\">Orders Processed</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-user fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mt-3\">\n                <Col md={6} sm={12}>\n                  <div className=\"bg-primary d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        {this.props.wipOrderCount}\n                      </span>\n                      <span className=\"text-white\">Planned Order</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-pencil-alt fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} sm={12}>\n                  <div className=\"bg-warning d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        {this.props.plannedOrderCount}\n                      </span>\n                      <span className=\"text-white\">WIP Order</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-image fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col md={3} sm={12}>\n              <ListGroup>\n                <ListGroup.Item className=\" active bg-sky\">\n                  <h3 className=\"text-white\">My Tasks</h3>\n                  <p className=\"text-white\">All Your to do list.</p>\n\n                  <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Task\"\n                        value={this.state.task}\n                        onChange={(e) => {\n                          this.setState({\n                            task: e.target.value\n                          });\n                        }}\n                      />\n                      <br />\n                      <Button\n                        variant=\"secondary\"\n                        type=\"button\"\n                        disabled={this.state.isLoading}\n                        onClick={this.handleAddNewTask}>\n                        {this.state.isLoading ? 'Wait...' : 'Add New Task'}\n                      </Button>\n                    </Form.Group>\n                  </Form>\n                </ListGroup.Item>\n                {this.state.tasks.map((task) => {\n                  return task.isCompleted ? (\n                    <ListGroup.Item\n                      className=\"d-flex justify-content-between\"\n                      key={task._id}>\n                      <div className=\"d-flex\">\n                        <span className=\"d-flex flex-column ml-2\">\n                          <span className=\"\">\n                            <del>{task.task}</del>\n                          </span>\n                        </span>\n                      </div>\n                      <i className=\"fa fa-check mt-2 text-primary\"></i>\n                    </ListGroup.Item>\n                  ) : (\n                    <ListGroup.Item\n                      className=\"d-flex justify-content-between\"\n                      key={task._id}>\n                      <div className=\"d-flex\">\n                        <span className=\"d-flex flex-column ml-2\">\n                          <span>{task.task}</span>\n                        </span>\n                      </div>\n                      <i\n                        className=\"fa fa-check mt-2 text-primary\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={this.markTaskComplete(task._id)}></i>\n                    </ListGroup.Item>\n                  );\n                })}\n              </ListGroup>\n            </Col>\n\n            <Col md={3} sm={12}>\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 400, width: 900 }}>\n                <ReactTable\n                  data={this.state.orders}\n                  columns={this.state.columns}\n                  noDataText={'no Recod Found!'}\n                  minRows={10}\n                  defaultPageSize={10}\n                  minWidth={1000}\n                  loading={this.state.isLoading}\n                  loadingText={'Loading...'}\n                  showFilters={true}\n                  className=\"react-table -striped -highlight\"\n                />\n                {/* <AgGridReact\n                  rowData={this.state.orders}\n                  columnDefs={this.state.columns}\n                /> */}\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12} sm={12} className=\"chart\">\n              <MyChart empPieChart={this.props.empPieChart}></MyChart>\n            </Col>\n          </Row>\n        </Container>\n\n        {/* Model Starts */}\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Request Change Details</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  defaultValue={this.props.user.displayName}\n                  value={this.state.displayNameChange}\n                  onChange={(e) => {\n                    this.setState({\n                      displayNameChange: e.target.value\n                    });\n                  }}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  defaultValue={this.props.user.email}\n                  value={this.state.emailChange}\n                  onChange={(e) => {\n                    this.setState({\n                      emailChange: e.target.value\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={this.handleRequestChangeAccountDetails}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Model End */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  user: state.app.user,\n  order: state.app.processedOrder,\n  wipOrderCount: state.app.wipOrder,\n  plannedOrderCount: state.app.plannedOrder,\n  empPieChart: state.app.empPieChart\n});\nexport default connect(mapStateToProps, {\n  OnlyLoadUser,\n  updateOrderAcceptOrReject,\n  processedOrder,\n  pieChartOrders,\n  wipOrder,\n  plannedOrder\n})(Emp);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/chat/Chat.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useState, useEffect } from 'react';\nimport Nav from '../Header/Header';\nimport { Container } from 'react-bootstrap';\n//socket\n//timeago\nimport { socket } from '../../socketService';\nimport TimeAgo from 'react-timeago';\nimport { convertDate } from './../../utils/functions';\nimport './Chat.css';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport Axios from 'axios';\n\nimport { baseUrl, baseFileUrl } from './../../baseUrl';\nlet chatSender = null;\nlet chatReciever = null;\nlet activeChat = null;\nconst Chat = (props) => {\n  const [myChats, setmyChats] = useState([]);\n  const [userChat, setuserChat] = useState([]);\n  const [searchedUsers, setSearchedUsers] = useState([]);\n  const [isChats, setIsChats] = useState(true);\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState('');\n  const [reciever, setreciever] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isReciever, setIsReciever] = useState(false);\n  const [sender, setSender] = useState('');\n\n  useEffect(() => {\n    socket.on('message', (result) => {\n      if (result.reciever == chatSender && result.sender == chatReciever) {\n        setMessages((messages) => [...messages, result]);\n        // $(\".msg_history\")\n        //   .stop()\n        //   .animate({ scrollTop: $(\".msg_history\")[0].scrollHeight }, 1000);\n      } else if (result.sender == chatSender) {\n        setMessages((messages) => [...messages, result]);\n        // $(\".msg_history\")\n        //   .stop()\n        //   .animate({ scrollTop: $(\".msg_history\")[0].scrollHeight }, 1000);\n      } else {\n      }\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if (message) {\n      const data = {\n        sender: sender,\n        reciever: reciever,\n        message: message\n      };\n\n      socket.emit('sendMessage', data);\n      setMessage('');\n      Axios.post(baseUrl + '/chats/sendMessage', data, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n        .then((response) => {})\n        .catch((error) => {\n          console.log(error.response.data);\n        });\n    }\n  };\n\n  const getSingleChat = (senders, reciever) => {\n    Axios.get(baseUrl + '/chats/getUserChat', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      },\n      params: {\n        sender: senders,\n        reciever: reciever\n      }\n    })\n      .then((response) => {\n        setuserChat(response.data.data);\n        setMessages(response.data.data[0].messages);\n        // $(\".msg_history\")\n        //   .stop()\n        //   .animate({ scrollTop: $(\".msg_history\")[0].scrollHeight }, 1000);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let recieverId = props.match.params.id;\n    let reciverdisplayName = props.match.params.displayName;\n    activeChat = reciverdisplayName;\n    setSender(localStorage.getItem('id'));\n\n    chatSender = localStorage.getItem('id');\n    chatReciever = recieverId;\n    setreciever(recieverId);\n\n    if (recieverId) {\n      getSingleChat(localStorage.getItem('id'), recieverId);\n      setIsReciever(true);\n    } else {\n      setIsReciever(false);\n    }\n    Axios.get(baseUrl + '/chats/getAllChats', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        setmyChats(response.data.data);\n      })\n      .catch((error) => {});\n  }, []);\n  const getSearchedUsers = (searchedKeyword) => {\n    console.log('searched', searchedKeyword);\n    Axios.get(baseUrl + `/auth/searchUsers?displayName=${searchedKeyword}`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        console.log('response from search', response);\n        setSearchedUsers(response.data.data);\n      })\n      .catch((error) => {});\n  };\n  const getUserChat = (chat) => {\n    if (chat.sender.id === sender) {\n      setreciever(chat.reciever.id);\n      activeChat = chat.reciever.displayName;\n      chatReciever = chat.reciever.id;\n    } else {\n      setreciever(chat.sender.id);\n      chatReciever = chat.sender.id;\n      activeChat = chat.sender.displayName;\n    }\n    getSingleChat(chat.sender.id, chat.reciever.id);\n  };\n  return (\n    <div>\n      <Nav></Nav>\n      <Container fluid>\n        <div class=\"container-fluid h-100\">\n          <div class=\"row justify-content-center h-100\">\n            <div class=\"col-md-4 col-xl-3 chat\">\n              <div class=\"card mb-sm-3 mb-md-0 contacts_card\">\n                <div class=\"card-header\">\n                  <div class=\"input-group\">\n                    <input\n                      onChange={(e) => {\n                        if (e.target.value !== '') {\n                          setIsChats(false);\n                          getSearchedUsers(e.target.value);\n                          setSearch(e.target.value);\n                        } else {\n                          setIsChats(true);\n                          setSearch(e.target.value);\n                        }\n                      }}\n                      value={search}\n                      type=\"text\"\n                      placeholder=\"Search...\"\n                      name=\"\"\n                      class=\"form-control search\"\n                    />\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text search_btn\">\n                        <i class=\"fas fa-search\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-body contacts_body\">\n                  <ui class=\"contacts\">\n                    {isChats ? (\n                      myChats.length > 0 ? (\n                        myChats.map((chat) => {\n                          return (\n                            <li\n                              key={chat._id}\n                              onClick={(e) => getUserChat(chat)}>\n                              <div class=\"d-flex bd-highlight\">\n                                <div class=\"img_cont\">\n                                  <img\n                                    src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                                    class=\"rounded-circle user_img\"\n                                  />\n                                </div>\n                                <div class=\"user_info\">\n                                  <span>\n                                    {' '}\n                                    {chat.sender.id === sender\n                                      ? chat.reciever.displayName\n                                      : chat.sender.displayName}\n                                  </span>\n                                  <p>{chat.lastMessageText}</p>\n                                  <span className=\"chat_date\">\n                                    <TimeAgo date={chat.lastMessageTime} />{' '}\n                                  </span>\n                                </div>\n                              </div>\n                            </li>\n                          );\n                        })\n                      ) : (\n                        <li>\n                          <div class=\"d-flex bd-highlight\">\n                            <div class=\"user_info\">\n                              <span>Empty Chat</span>\n                              <p>Search Users And Chat</p>\n                            </div>\n                          </div>\n                        </li>\n                      )\n                    ) : searchedUsers.length > 0 ? (\n                      searchedUsers.map((user) => {\n                        return (\n                          <a\n                            href={`/chat/${user._id}/${user.displayName}`}\n                            style={{ textDecoration: 'none', color: 'white' }}>\n                            <li key={user._id}>\n                              <div class=\"d-flex bd-highlight\">\n                                <div class=\"img_cont\">\n                                  <img\n                                    src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                                    class=\"rounded-circle user_img\"\n                                  />\n                                </div>\n                                <div class=\"user_info\">\n                                  <span> {user.displayName}</span>\n                                  <p>{user.email}</p>\n                                </div>\n                              </div>\n                            </li>\n                          </a>\n                        );\n                      })\n                    ) : (\n                      <li>\n                        <div class=\"d-flex bd-highlight\">\n                          <div class=\"user_info\">\n                            <span>Searching</span>\n                            <p>No User Found...</p>\n                          </div>\n                        </div>\n                      </li>\n                    )}\n                  </ui>\n                </div>\n                <div class=\"card-footer\"></div>\n              </div>\n            </div>\n            <div class=\"col-md-8 col-xl-6 chat\">\n              <div class=\"card\">\n                <div class=\"card-header msg_head\">\n                  <div class=\"d-flex bd-highlight\">\n                    <div class=\"img_cont\">\n                      <img\n                        src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                        class=\"rounded-circle user_img\"\n                      />\n                      <span class=\"online_icon\"></span>\n                    </div>\n                    <div class=\"user_info\">\n                      {activeChat == null ? (\n                        <span>Select Chat</span>\n                      ) : (\n                        <span>Chat with {activeChat}</span>\n                      )}\n\n                      <p>{messages.length} Messages</p>\n                    </div>\n                  </div>\n                  <span id=\"action_menu_btn\">\n                    <i class=\"fas fa-ellipsis-v\"></i>\n                  </span>\n                </div>\n                <div class=\"card-body msg_card_body\">\n                  {messages.length > 0 ? (\n                    messages.map((message) => {\n                      return message.sender === sender ? (\n                        <div\n                          key={message._id}\n                          class=\"d-flex justify-content-end mb-4\">\n                          <div class=\"msg_cotainer_send\">\n                            {message.text}\n                            <span class=\"msg_time_send\">\n                              {convertDate(message.createdAt)}\n                            </span>\n                          </div>\n                          <div class=\"img_cont_msg\">\n                            <img\n                              src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                              class=\"rounded-circle user_img_msg\"\n                            />\n                          </div>\n                        </div>\n                      ) : (\n                        <div\n                          key={message._id}\n                          class=\"d-flex justify-content-start mb-4\">\n                          <div class=\"img_cont_msg\">\n                            <img\n                              src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                              class=\"rounded-circle user_img_msg\"\n                            />\n                          </div>\n                          <div class=\"msg_cotainer\">\n                            {message.text}\n                            <span class=\"msg_time\">\n                              {convertDate(message.createdAt)}\n                            </span>\n                          </div>\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div class=\"d-flex justify-content-start mb-4\">\n                      <div class=\"img_cont_msg\">\n                        <img\n                          src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                          class=\"rounded-circle user_img_msg\"\n                        />\n                      </div>\n                      <div class=\"msg_cotainer\">\n                        Empty Inbox\n                        <span class=\"msg_time\">Now</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div class=\"card-footer\">\n                  <div class=\"input-group\">\n                    {/* <div class='input-group-append'>\n                      <span class='input-group-text attach_btn'>\n                        <i class='fas fa-paperclip'></i>\n                      </span>\n                    </div> */}\n                    <textarea\n                      name=\"\"\n                      class=\"form-control type_msg\"\n                      placeholder=\"Type your message...\"\n                      value={message}\n                      onChange={({ target: { value } }) => setMessage(value)}\n                      onKeyPress={(event) =>\n                        event.key === 'Enter' ? sendMessage(event) : null\n                      }></textarea>\n                    <div class=\"input-group-append\">\n                      <span class=\"input-group-text send_btn\">\n                        <i class=\"fas fa-location-arrow\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Chat;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/create-team/CreateTeam.js",["370","371","372","373","374","375","376"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport Nav from '../Header/Header';\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Table,\n  InputGroup,\n  FormCheck,\n  ProgressBar\n} from 'react-bootstrap';\nimport { response } from 'express';\nimport Swal from 'sweetalert';\n\nconst CreateTeam = () => {\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    axios\n      .get(baseUrl + '/auth/getAllEmployees', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        setEmployees(response.data);\n        console.log(employees);\n      })\n      .catch((error) => {\n        Swal('error in fetching employees');\n      });\n  }, []);\n  return (\n    <div>\n      <Nav></Nav>\n      <Container>\n        <h1>Staff view</h1>\n        <Row className=\"mt-5\">\n          <Col md={12} sm={12}>\n            <ListGroup as=\"ul\" className=\"mt-3\">\n              <li className=\"list-group-item bg-sky text-white\">\n                <strong>Teams</strong>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-between\">\n                <span>name</span>\n                <span>email</span>\n              </li>\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default CreateTeam;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Stock/Stock.js",["377","378","379"],"import React from 'react';\nimport Nav from '../Header/Header';\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Modal,\n  Button,\n  Form\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport '../reports/Reports.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport { Component } from 'react';\nimport Axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nfunction actionCellRenderer(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Accept </Button>\n`;\n\n  return eGui;\n}\n\nfunction reejectButtonRendrer(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Reject </Button>\n`;\n\n  return eGui;\n}\nclass Stock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      productToReject: 0,\n      rejectId: null,\n      totalProduced: -1,\n      rawMaterialColumns: [\n        {\n          headerName: 'Id',\n          field: 'id',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Raw Material Count',\n          field: 'count',\n          sortable: true,\n          filter: true\n        },\n\n        {\n          headerName: 'Machine',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n\n        {\n          headerName: 'Raw Material Type',\n          field: 'type',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Date', field: 'date', sortable: true, filter: true },\n        {\n          headerName: 'Action',\n          minWidth: 150,\n          cellRenderer: actionCellRenderer,\n          editable: false,\n          colId: 'action'\n        }\n      ],\n      stocksColumns: [\n        {\n          headerName: 'Raw Material Count',\n          field: 'count',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Machine',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n\n        {\n          headerName: 'Raw Material Type',\n          field: 'type',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Date', field: 'date', sortable: true, filter: true }\n      ],\n      totalProductsProducingColumns: [\n        {\n          headerName: 'Id',\n          field: 'id',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Product Count',\n          field: 'count',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Machine',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Product',\n          field: 'product',\n          sortable: true,\n          filter: true\n        },\n\n        { headerName: 'Date', field: 'date', sortable: true, filter: true },\n        {\n          headerName: 'Action',\n          minWidth: 150,\n          cellRenderer: reejectButtonRendrer,\n          editable: false,\n          colId: 'action'\n        }\n      ],\n      rawMaterials: [],\n      totalProductsProduced: [],\n      stocks: []\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRejectProducts = this.handleRejectProducts.bind(this);\n  }\n  handleRejectProducts = (e) => {\n    e.preventDefault();\n    const { totalProduced, rejectId, productToReject } = this.state;\n    if (totalProduced < productToReject) {\n      alert('Rejection Quantity Exceeed');\n      return;\n    }\n    const dataToSend = {\n      id: rejectId,\n      count: productToReject\n    };\n\n    Axios.post(baseUrl + '/products/rejectProductsCount', dataToSend, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        this.setState({\n          show: false,\n          productToReject: 0,\n          totalProduced: -1,\n          rejectId: null\n        });\n        this.getConfirmedProducts();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  handleClose = (e) => {\n    this.setState({\n      show: false\n    });\n  };\n  updateToStock = (id) => {\n    const dataToSend = {\n      id: id\n    };\n    Axios.post(baseUrl + '/rawMaterials/putInStock', dataToSend, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        this.getRawMaterials();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  onCellClicked = (e) => {\n    console.log('clicked', e, e.data);\n    const id = e.data.id;\n    if (e.colDef.headerName == 'Action') {\n      if (!id) {\n        return;\n      }\n      this.updateToStock(id);\n    } else {\n    }\n  };\n  onCellClickedReject = (e) => {\n    console.log('clicked', e.data);\n    const id = e.data.id;\n    console.log(id);\n    if (e.colDef.headerName == 'Action') {\n      if (!id) {\n        return;\n      }\n      this.setState({\n        rejectId: id,\n        show: true,\n        totalProduced: e.data.count\n      });\n    } else {\n    }\n  };\n\n  getConfirmedProducts = () => {\n    Axios.get(baseUrl + '/products/getProductsProduced', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        const data = response.data.data;\n        let totalProductsProduced = [];\n        data.forEach((product) => {\n          totalProductsProduced.push({\n            id: product._id,\n            count: product.count,\n            machine: product.machine.name,\n            product: product.product.name,\n            date: moment().format('llll', product.date)\n          });\n        });\n        this.setState({\n          totalProductsProduced: totalProductsProduced\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getRawMaterials = () => {\n    Axios.get(baseUrl + '/rawMaterials/getAllRawMaterials', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        const data = response.data.data;\n        console.log('data', data);\n        let rawMaterials = [];\n        let stocks = [];\n        data.forEach((material) => {\n          if (material.status == true) {\n            stocks.push({\n              count: material.count,\n              machine: material.machine.name,\n              type: material.type,\n              date: moment().format('llll', material.date)\n            });\n          } else {\n            rawMaterials.push({\n              id: material._id,\n              count: material.count,\n              machine: material.machine.name,\n              type: material.type,\n              date: moment().format('llll', material.date)\n            });\n          }\n        });\n        this.setState({\n          rawMaterials: rawMaterials,\n          stocks: stocks\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.getConfirmedProducts();\n    this.getRawMaterials();\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav></Nav>\n        <Container fluid>\n          <h1 className=\"p-3 text-center text-danger\">Product At Low Amount</h1>\n          <Row>\n            <Col md={{ span: 10, offset: 1 }} className=\"mt-3\">\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 400, width: 600 }}>\n                <AgGridReact\n                  rowData={this.state.rawMaterials}\n                  columnDefs={this.state.rawMaterialColumns}\n                  onCellClicked={this.onCellClicked}\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 5, offset: 1 }} sm={12}>\n              <h1 className=\"p-3 text-center\">In Stock</h1>\n              <ListGroup>\n                <div\n                  className=\"ag-theme-alpine\"\n                  style={{ height: 400, width: 600 }}>\n                  <AgGridReact\n                    rowData={this.state.stocks}\n                    columnDefs={this.state.stocksColumns}\n                  />\n                </div>\n              </ListGroup>\n            </Col>\n            <Col md={{ span: 5 }} sm={12}>\n              <h1 className=\"p-3 text-center\">Production Done</h1>\n              <ListGroup>\n                <div\n                  className=\"ag-theme-alpine\"\n                  style={{ height: 400, width: 600 }}>\n                  <AgGridReact\n                    rowData={this.state.totalProductsProduced}\n                    columnDefs={this.state.totalProductsProducingColumns}\n                    onCellClicked={this.onCellClickedReject}\n                  />\n                </div>\n              </ListGroup>\n            </Col>\n          </Row>\n        </Container>\n\n        {/* Model Starts */}\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter The Quantity To Reject</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Quantity\"\n                  value={this.state.productToReject}\n                  onChange={(e) => {\n                    this.setState({\n                      productToReject: e.target.value\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleRejectProducts}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Model End */}\n      </div>\n    );\n  }\n}\n\nexport default Stock;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/orders/GenerateOrderForm.js",["380","381","382","383","384"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Help/Help.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Staff_view/Staff.js",["385","386","387"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getEmployeeOrdersForStaffPage,\n  updateToVip,\n  updateOrderDone\n} from '../../actions/staffAction';\nimport { getMyTeams } from '../../actions/teamsActions';\nimport { getAllProject } from '../../actions/projectActions';\nimport Loader from 'react-loader-spinner';\nimport './Staff.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap';\n// import MyChart from \"../../components/Dashboard/Chart3\";\nimport Big from './Big';\n// import Swal from \"sweetalert\";\nconst Staff = () => {\n  const dispatch = useDispatch();\n  const { employeeOrder, myTeam, projects } = useSelector((state) => ({\n    employeeOrder: state.app.orderForStaff,\n    myTeam: state.app.myTeam,\n    projects: state.app.projects\n  }));\n  // const [orders, setOrders] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  // const [value, onChange] = useState(new Date());\n  // const myEventsList = new Date();\n  useEffect(() => {\n    const runAction = async () => {\n      setisLoading(false);\n      await dispatch(await getEmployeeOrdersForStaffPage());\n      await dispatch(await getMyTeams());\n      await dispatch(await getAllProject());\n      setisLoading(true);\n    };\n    runAction();\n  }, []);\n  useEffect(() => {\n    // axios\n    //   .get(baseUrl + \"/teams/getMyTeams\", {\n    //     headers: {\n    //       Authorization: \"Bearer \" + localStorage.getItem(\"CRM_TOKEN\"),\n    //     },\n    //   })\n    //   .then(response => {\n    //     console.log(response);\n    //   })\n    //   .catch(error => {\n    //     Swal(\"error in fetching teams\");\n    //   });\n  });\n  const updateToWIP = async (event, data) => {\n    // const orderStatus = event.target.value;\n    const id = data;\n    const status = 1;\n    const preData = {\n      id,\n      status\n    };\n    setisLoading(false);\n    await dispatch(await updateToVip(preData));\n    await dispatch(await getEmployeeOrdersForStaffPage());\n    setisLoading(true);\n\n    // axios\n    //   .post(baseUrl + \"/orders/updateOrderStatus\", preData, {\n    //     headers: {\n    //       Authorization: \"Bearer \" + localStorage.getItem(\"CRM_TOKEN\"),\n    //     },\n    //   })\n    //   .then(response => {\n    //     Swal(\"Status updated\");\n    //     axios\n    //       .get(baseUrl + \"/orders/getEmployeeOrders\", {\n    //         headers: {\n    //           Authorization: \"Bearer \" + localStorage.getItem(\"CRM_TOKEN\"),\n    //         },\n    //       })\n    //       .then(response => {\n    //         setOrders(response.data.data);\n    //         console.log(orders);\n    //       })\n    //       .catch(error => {\n    //         console.log(error);\n    //       });\n    //   })\n    //   .catch(error => {\n    //     console.log(error.response.data.error);\n    //   });\n  };\n  const updateToDone = async (event, data) => {\n    // const orderStatus = event.target.value;\n    const id = data;\n    const status = 2;\n    const preData = {\n      id,\n      status\n    };\n    setisLoading(false);\n    await dispatch(await updateOrderDone(preData));\n    await dispatch(await getEmployeeOrdersForStaffPage());\n    setisLoading(true);\n\n    // axios\n    //   .post(baseUrl + \"/orders/updateOrderStatus\", preData, {\n    //     headers: {\n    //       Authorization: \"Bearer \" + localStorage.getItem(\"CRM_TOKEN\"),\n    //     },\n    //   })\n    //   .then(response => {\n    //     Swal(\"Status updated\");\n    //     axios\n    //       .get(baseUrl + \"/orders/getEmployeeOrders\", {\n    //         headers: {\n    //           Authorization: \"Bearer \" + localStorage.getItem(\"CRM_TOKEN\"),\n    //         },\n    //       })\n    //       .then(response => {\n    //         setOrders(response.data.data);\n    //         console.log(orders);\n    //       })\n    //       .catch(error => {\n    //         console.log(error);\n    //       });\n    //   })\n    //   .catch(error => {\n    //     console.log(error.response.data.error);\n    //   });\n  };\n  if (!isLoading) {\n    return (\n      <div className=\"loading-final-year\">\n        <Loader\n          type=\"Rings\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000000} //30 secs\n        />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Nav></Nav>\n      <Container>\n        <h1>Staff view</h1>\n        <Row className=\"mt-5\">\n          <Col md={12} sm={12}>\n            <Big projects={projects}></Big>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4} sm={12}>\n            <ListGroup as=\"ul\" className=\"mt-3\">\n              <li className=\"list-group-item bg-sky text-white\">\n                <strong>Planned</strong>\n              </li>\n              {employeeOrder\n                .filter((order) => order.status === 0)\n                .map((filteredOrders) => (\n                  <li className=\"list-group-item \">\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned by</p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.assignedBy.displayName}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned </p>\n                      <p id={filteredOrders._id}>{filteredOrders.assignedTo}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Product </p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.product.name}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Quantity </p>\n                      <p id={filteredOrders._id}>{filteredOrders.count}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Provider </p>\n                      <p id={filteredOrders._id}>{filteredOrders.provider}</p>\n                    </div>\n                    <div>\n                      <button\n                        className=\"btn btn-block btn-primary text-white btn-sm\"\n                        onClick={(event) =>\n                          updateToWIP(event, filteredOrders.id)\n                        }\n                        value={filteredOrders.status}>\n                        Mark as WIP\n                      </button>\n                    </div>\n                    <hr />\n                  </li>\n                ))}\n            </ListGroup>\n          </Col>\n          <Col md={4} sm={12}>\n            <ListGroup as=\"ul\" className=\"mt-3\">\n              <li className=\"list-group-item bg-sky text-white\">\n                <strong>Wip</strong>\n              </li>\n              {employeeOrder\n                .filter((order) => order.status == 1)\n                .map((filteredOrders) => (\n                  <li className=\"list-group-item \">\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned by</p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.assignedBy.displayName}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned </p>\n                      <p id={filteredOrders._id}>{filteredOrders.assignedTo}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Product </p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.product.name}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Quantity </p>\n                      <p id={filteredOrders._id}>{filteredOrders.count}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Provider </p>\n                      <p id={filteredOrders._id}>{filteredOrders.provider}</p>\n                    </div>\n                    <div>\n                      <button\n                        className=\"btn btn-block btn-primary text-white btn-sm\"\n                        onClick={(event) =>\n                          updateToDone(event, filteredOrders.id)\n                        }\n                        value={filteredOrders.status}>\n                        Mark as Done\n                      </button>\n                    </div>\n                    <hr />\n                  </li>\n                ))}\n            </ListGroup>\n          </Col>\n          <Col md={4} sm={12}>\n            <ListGroup as=\"ul\" className=\"mt-3\">\n              <li className=\"list-group-item bg-sky text-white\">\n                <strong>Done</strong>\n              </li>\n              {employeeOrder\n                .filter((order) => order.status == 2)\n                .map((filteredOrders) => (\n                  <li className=\"list-group-item \">\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned by</p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.assignedBy.displayName}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Assigned </p>\n                      <p id={filteredOrders._id}>{filteredOrders.assignedTo}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Product </p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.product.name}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Quantity </p>\n                      <p id={filteredOrders._id}>{filteredOrders.count}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Provider </p>\n                      <p id={filteredOrders._id}>{filteredOrders.provider}</p>\n                    </div>\n                    <hr />\n                  </li>\n                ))}\n            </ListGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }} sm={12}>\n            <h3 className=\"text-center mt-3\">Team</h3>\n            <ListGroup as=\"ul\" className=\"mt-3\">\n              <li className=\"list-group-item bg-sky text-white\">\n                <strong>Teams</strong>\n              </li>\n              {myTeam.map((filteredOrders) => (\n                <li className=\"list-group-item \">\n                  <div className=\"d-flex justify-content-between\">\n                    <p>Assigned To</p>\n                    <p id={filteredOrders._id}>{filteredOrders.team.name}</p>\n                  </div>\n                  <div className=\"d-flex justify-content-between\">\n                    <p>Member</p>\n                    <p id={filteredOrders._id}>{filteredOrders.memberName}</p>\n                  </div>\n                  {/* <div className=\"d-flex justify-content-between\">\n                      <p>Assigned </p>\n                      <p id={filteredOrders._id}>{filteredOrders.assignedTo}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Product </p>\n                      <p id={filteredOrders._id}>\n                        {filteredOrders.product.name}\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Quantity </p>\n                      <p id={filteredOrders._id}>{filteredOrders.count}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <p>Provider </p>\n                      <p id={filteredOrders._id}>{filteredOrders.provider}</p>\n                    </div> */}\n                  <hr />\n                </li>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Staff;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/Manager.js",["388","389"],"import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport {\n  getStaff,\n  getEmployeeAndStaff,\n  processedOrder,\n  updatePaymentStatus,\n  pieChartOrders\n} from '../../actions/staffAction';\nimport { getUser } from '../../actions/userActions';\nimport { getAllTeams } from '../../actions/teamsActions';\nimport { getAllProject } from '../../actions/projectActions';\nimport Loader from 'react-loader-spinner';\nimport { Badge, CardText } from 'reactstrap';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, ListGroup, Table, Button } from 'react-bootstrap';\nimport MyChart from '../../components/Dashboard/Chart3';\nimport AddTeamModal from './components/AddteamModel/AddTeamModel';\nimport AddProjectModal from './components/AddProject/AddProjectModal';\nimport AssignModal from './components/AssgnModal/AssignModal';\nimport './Manager.css';\n\nconst Manager = ({\n  getUser,\n  employees,\n  getEmployeeAndStaff,\n  processedOrder,\n  getAllTeams,\n  teams,\n  getAllProject,\n  projects,\n  getStaff,\n  employeeAndStaff,\n  staff,\n  dailySales,\n  pieChartOrders,\n  empPieChart,\n  updatePaymentStatus\n}) => {\n  useEffect(() => {\n    const runActions = async () => {\n      setLoading(false);\n      await getUser();\n      await pieChartOrders();\n      await getEmployeeAndStaff();\n      await getAllTeams();\n      await getAllProject();\n      await processedOrder();\n      await getStaff();\n      setLoading(true);\n    };\n    runActions();\n  }, []);\n  console.log(employees);\n  // const { employees } = useSelector(({ app }) => ({\n  //   employees: app.employees,\n  // }));\n  const [calenderDate, setcalenderDate] = useState(new Date());\n  const [Loading, setLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modalProject, setModalProject] = useState(false);\n  const [modalAssign, setmodalAssign] = useState(null);\n  useEffect(() => {\n    setmodalAssign(\n      Array(teams.length)\n        .fill()\n        .map((v, i) => false)\n    );\n  }, [teams]);\n  const toggle = () => setModal(!modal);\n  const toggleProject = () => setModalProject(!modalProject);\n  const toggleAssign = (i) => {\n    let form = [...modalAssign];\n    form[i] = !form[i];\n    setmodalAssign(form);\n  };\n  const handleCalendarChange = (calenderDate) => {\n    debugger;\n    setcalenderDate(new Date(calenderDate));\n  };\n  if (!Loading)\n    return (\n      <div className=\"loading-final-year\">\n        <Loader type=\"Rings\" color=\"#00BFFF\" height={100} width={100} />\n      </div>\n    );\n  return (\n    <div>\n      <div>\n        <Nav></Nav>\n        <Container>\n          <h1>Manager view</h1>\n          <Row className=\"mt-5\">\n            <Col md={3} sm={12}>\n              <Calendar\n                onChange={handleCalendarChange}\n                value={calenderDate}\n                tileClassName={({ date, view }) => {\n                  if (\n                    projects.find(\n                      (x) =>\n                        !x.isCompleted &&\n                        moment(x.dueDate).format('DD-MM-YYYY') ===\n                          moment(date).format('DD-MM-YYYY')\n                    )\n                  ) {\n                    return 'highlight';\n                  }\n                }}\n              />\n            </Col>\n            <Col md={6} sm={12} className=\"bg-sky\">\n              <Row className=\"mt-3\">\n                <Col md={6} sm={12}>\n                  <div className=\"bg-danger d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        {dailySales}\n                      </span>\n                      <span className=\"text-white\">Daily sales</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-calendar fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} sm={12}>\n                  <div className=\"bg-success d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        1200\n                      </span>\n                      <span className=\"text-white\">Daily Expanse</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-bookmark fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mt-3\">\n                <Col md={6} sm={12}>\n                  <div className=\"bg-primary d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        2055\n                      </span>\n                      <span className=\"text-white\">Done</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-check fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} sm={12}>\n                  <div className=\"bg-warning d-flex justify-content-between my-card\">\n                    <div className=\"d-flex flex-column\">\n                      <span className=\"my-card-number font-weight-bold text-white\">\n                        5220\n                      </span>\n                      <span className=\"text-white\">Shipment</span>\n                    </div>\n                    <div>\n                      <i className=\"fa fa-bus fa-2x text-white\"></i>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"d-flex justify-content-center  bg-light mt-5\">\n                expanses\n                <MyChart empPieChart={empPieChart}></MyChart>\n              </div>\n            </Col>\n            <Col md={3} sm={12}>\n              <ListGroup as=\"ul\">\n                <ListGroup.Item\n                  style={{\n                    justifyContent: 'space-between'\n                  }}\n                  as=\"li\" \n                  active\n                  className=\"d-flex\">\n                  <Button disabled={true}>Project</Button>\n                  <Button color=\"primary\" onClick={toggleProject}>\n                    Add Project\n                  </Button>{' '}\n                </ListGroup.Item>\n                {projects.length > 0 &&\n                  projects.map((t, i) => (\n                    <>\n                      <ListGroup.Item\n                        as=\"li\"\n                        style={{\n                          justifyContent: 'space-between'\n                        }}\n                        className=\"d-flex\">\n                        <div>{t.project}</div>\n                        {t.isAssigned && (\n                          <Badge\n                            color={\n                              t.isCompleted\n                                ? 'success'\n                                : t.isAssigned\n                                ? 'primary'\n                                : 'dark'\n                            }>\n                            {t.isCompleted\n                              ? 'Completed'\n                              : t.isAssigned\n                              ? 'Working'\n                              : 'Not Assigned'}\n                          </Badge>\n                        )}\n                        {!t.isAssigned && (\n                          <Button\n                            color=\"primary\"\n                            onClick={() => {\n                              toggleAssign(i);\n                            }}>\n                            Assign\n                          </Button>\n                        )}\n                      </ListGroup.Item>\n                      <AssignModal\n                        toggle={toggleAssign}\n                        projectId={t.id}\n                        teams={teams}\n                        projects={projects}\n                        Id={i}\n                        modal={modalAssign[i]}\n                      />\n                    </>\n                  ))}\n              </ListGroup>\n              <ListGroup as=\"ul\" className=\"mt-3\">\n                <ListGroup.Item\n                  style={{\n                    justifyContent: 'space-between'\n                  }}\n                  as=\"li\"\n                  active\n                  className=\"d-flex\">\n                  <Button disabled={true}>Teams</Button>\n                  <Button color=\"primary\" onClick={toggle}>\n                    Add Team\n                  </Button>{' '}\n                </ListGroup.Item>\n                {teams.length > 0 &&\n                  _.uniqBy(teams, (t) => {\n                    return t.team._id;\n                  }).map((t) => (\n                    <ListGroup.Item as=\"li\">{t.team.name}</ListGroup.Item>\n                  ))}\n              </ListGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }} sm={12}>\n              <h3 className=\"text-center mt-3\">Payroll</h3>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th> Full Name</th>\n                    <th>Email</th>\n                    <th>Role</th>\n\n                    <th>Paid</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {staff.length > 0 &&\n                    staff.map((e, i) => (\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{e.email}</td>\n                        <td>{e.displayName}</td>\n                        <td>{e.type}</td>\n                        <td>{e.isPaid ? 'PAID' : 'NOT PAID'}</td>\n                        <td>\n                          <Button\n                            disabled={e.isPaid}\n                            color=\"primary\"\n                            onClick={async () => {\n                              await updatePaymentStatus(e._id);\n                            }}>\n                            Click to Pay\n                          </Button>{' '}\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <AddTeamModal\n        toggle={toggle}\n        setModal={setModal}\n        employeeAndStaff={employeeAndStaff}\n        modal={modal}\n        employees={employees}\n      />\n      <AddProjectModal\n        toggle={toggleProject}\n        setModal={setModalProject}\n        modal={modalProject}\n      />\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  employees: state.app.employees,\n  teams: state.app.teams,\n  projects: state.app.projects,\n  staff: state.app.staff,\n  dailySales: state.app.processedOrder,\n  empPieChart: state.app.empPieChart,\n  employeeAndStaff: state.app.employeeAndStaff\n});\nexport default connect(mapStateToProps, {\n  getUser,\n  getAllTeams,\n  getAllProject,\n  getEmployeeAndStaff,\n  getStaff,\n  pieChartOrders,\n  processedOrder,\n  updatePaymentStatus\n})(Manager);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-product/AddProduct.js",["390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-material/AddMaterial.js",["405","406","407"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Swal from 'sweetalert';\nconst AddMaterial = () => {\n  const [machines, setMachines] = useState([]);\n  const [type, setType] = useState('');\n  const [name, setName] = useState('');\n  const [count, setCount] = useState('');\n  const [machine, setMachine] = useState('');\n  useEffect(() => {\n    axios\n      .get(baseUrl + '/machines/getAllMachines', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        setMachines(response.data.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const save = (e) => {\n    e.preventDefault();\n    const data = {\n      type,\n      count,\n      machine,\n      name\n    };\n    console.log(data);\n    axios\n      .post(baseUrl + '/rawMaterials/addNewRawMaterial', data)\n      .then((response) => {\n        Swal('Raw Material Added');\n      })\n      .catch((error) => {\n        Swal(error.response.data.error);\n      });\n  };\n  return (\n    <div>\n      <h1 className=\"text-center mt-3\">Add Material </h1>\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            data-testid=\"name\"\n            type=\"text\"\n            placeholder=\"Type\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Product Type</Form.Label>\n          <Form.Control\n            data-testid=\"type\"\n            type=\"text\"\n            placeholder=\"Type\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Product Quantity</Form.Label>\n          <Form.Control\n            data-testid=\"quantity\"\n            type=\"text\"\n            placeholder=\"Quantity\"\n            value={count}\n            onChange={(e) => setCount(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>Select Machine</Form.Label>\n          <Form.Control\n            as=\"select\"\n            custom\n            onChange={(e) => setMachine(e.target.value)}>\n            {machines.map((machine) => (\n              <option key={machine.id} value={machine.id}>\n                {machine.name}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Button onClick={save}>Add</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddMaterial;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page1.js",["408","409","410","411","412","413","414","415"],"import React from 'react';\nimport Header from './../../pages/Header/Header';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport Swal from 'sweetalert';\nimport { baseUrl } from './../../baseUrl';\nimport { AgGridReact } from 'ag-grid-react';\nimport { Component } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction actionCellRendererAprrove(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Approve </Button>\n`;\n\n  return eGui;\n}\n\nfunction actionCellRendererDelete(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Delete\" > Delete </Button>\n`;\n\n  return eGui;\n}\n\nfunction approveAsManager(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Make Manager </Button>\n`;\n\n  return eGui;\n}\n\nfunction approveAsAdmin(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Make Admin </Button>\n`;\n\n  return eGui;\n}\n\nfunction approveAsEmployee(params) {\n  let eGui = document.createElement('div');\n\n  eGui.innerHTML = `\n<Button variant=\"primary\" data-action=\"Accept\" > Make Employee </Button>\n`;\n\n  return eGui;\n}\n\nclass Admin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          headerName: 'Name',\n          field: 'displayName',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Email', field: 'email', sortable: true, filter: true },\n        // { headerName: \"Profile\", field: \"profile\", sortable: true, filter: true },\n        { headerName: 'Status', field: 'status', sortable: true, filter: true },\n        { headerName: 'Type', field: 'type', sortable: true, filter: true },\n        {\n          headerName: 'Action',\n          minWidth: 150,\n          cellRenderer: actionCellRendererAprrove,\n          editable: false,\n          colId: 'action'\n        }\n      ],\n\n      ApproveUserscolumns: [\n        {\n          headerName: 'Name',\n          field: 'displayName',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Email', field: 'email', sortable: true, filter: true },\n        // { headerName: \"Profile\", field: \"profile\", sortable: true, filter: true },\n        { headerName: 'Status', field: 'status', sortable: true, filter: true },\n        { headerName: 'Type', field: 'type', sortable: true, filter: true },\n        {\n          headerName: 'Action',\n          minWidth: 150,\n          cellRenderer: actionCellRendererDelete,\n          editable: false,\n          colId: 'action'\n        }\n      ],\n\n      changeRolesColumns: [\n        {\n          headerName: 'Name',\n          field: 'displayName',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Email', field: 'email', sortable: true, filter: true },\n        // { headerName: \"Profile\", field: \"profile\", sortable: true, filter: true },\n        { headerName: 'Status', field: 'status', sortable: true, filter: true },\n        { headerName: 'Type', field: 'type', sortable: true, filter: true },\n\n        {\n          headerName: 'Make Employee',\n          minWidth: 150,\n          cellRenderer: approveAsEmployee,\n          editable: false,\n          colId: 'action'\n        },\n\n        {\n          headerName: 'Make Manager',\n          minWidth: 150,\n          cellRenderer: approveAsManager,\n          editable: false,\n          colId: 'action'\n        },\n\n        {\n          headerName: 'Make Admin',\n          minWidth: 150,\n          cellRenderer: approveAsAdmin,\n          editable: false,\n          colId: 'action'\n        }\n      ],\n\n      unApproveUsers: [],\n      approveUsers: [],\n      deleteUser : false\n    };\n  }\n  componentDidMount() {\n    this.getAllUsers();\n  }\n  getAllUsers = () => {\n    Axios.get(`${baseUrl}/auth/getAllUsers`)\n      .then((response) => {\n        const data = response.data.data;\n        console.log('data', data);\n        let unApproveUsers = [];\n        let approveUsers = [];\n        data.forEach((user) => {\n          if (user._id !== this.props.userMain._id) {\n            if (user.status == false) {\n              unApproveUsers.push(user);\n            } else {\n              approveUsers.push(user);\n            }\n          }\n        });\n        this.setState({\n          unApproveUsers,\n          approveUsers\n        });\n      })\n      .catch((error) => {\n        Swal(error.response.error);\n      });\n  };\n  ApproveUser = (data) => {\n    console.log(data);\n    const dataToSend = {\n      id: data._id\n    };\n    Axios.post(`${baseUrl}/auth/approveuser`, dataToSend)\n      .then((response) => {\n        console.log('response', response);\n        this.getAllUsers();\n      })\n      .catch((error) => {\n        Swal(error.response.error);\n      });\n  };\n  onCellClickedApprove = (e) => {\n    if (e.colDef.headerName == 'Action') {\n      this.ApproveUser(e.data);\n    } else {\n      return;\n    }\n  };\n  updateUserRole = (data) => {\n    Axios.post(`${baseUrl}/auth/updateRole`, data)\n      .then((response) => {\n        console.log('response', response);\n        this.getAllUsers();\n      })\n      .catch((error) => {\n        Swal(error.response.error);\n      });\n  };\n  onCellClickedChangeRole = (e) => {\n    console.log(e.colDef.headerName, e.data);\n    let data = null;\n    if (e.colDef.headerName == 'Make Manager') {\n      data = {\n        id: e.data.id,\n        type: 'manager'\n      };\n      this.updateUserRole(data);\n    } else if (e.colDef.headerName == 'Make Employee') {\n      data = {\n        id: e.data.id,\n        type: 'employee'\n      };\n      this.updateUserRole(data);\n    } else if (e.colDef.headerName == 'Make Admin') {\n      data = {\n        id: e.data.id,\n        type: 'admin'\n      };\n      this.updateUserRole(data);\n    }\n  };\n  /***\n   * Delete user from database\n   */\n  deleteUser = async ({id}) => {\n    try {\n      const response = await Axios.delete(`${baseUrl}/auth/users/${id}`);\n      this.getAllUsers();\n    } catch (error) {\n      Swal(error.response.data.error);\n    }\n  };\n  onCellClickedDeleteUser = (e) => {\n    console.log(e.colDef.headerName, e.data);\n    this.deleteUser({id: e.data.id});\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        <Container fluid>\n          <Row>\n            <Col lg={6} md={6} xs={12}>\n              <h3>List of users</h3>\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 400, width: 600 }}>\n                <AgGridReact\n                  rowData={this.state.unApproveUsers}\n                  columnDefs={this.state.columns}\n                  onCellClicked={this.onCellClickedApprove}\n                />\n              </div>\n            </Col>\n            <Col lg={6} md={6} xs={12}>\n              <h3>Role of users</h3>\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 400, width: 600 }}>\n                <AgGridReact\n                  rowData={this.state.approveUsers}\n                  columnDefs={this.state.changeRolesColumns}\n                  onCellClicked={this.onCellClickedChangeRole}\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={1} md={1} xs={12}></Col>\n            <Col lg={9} md={9} xs={12}>\n              <h3>Approved Users</h3>\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 400, width: '100%' }}>\n                <AgGridReact\n                  rowData={this.state.approveUsers}\n                  columnDefs={this.state.ApproveUserscolumns}\n                  onCellClicked={this.onCellClickedDeleteUser}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  userMain: state.app.user\n});\nexport default connect(mapStateToProps, null)(Admin);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Target/Target.js",["416","417","418"],"import React, { Component } from 'react';\nimport Nav from '../Header/Header';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { AgGridReact } from 'ag-grid-react';\nimport { baseUrl } from './../../baseUrl';\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Table,\n  InputGroup,\n  FormControl,\n  Button\n} from 'react-bootstrap';\nimport './Target.css';\nimport MyChart from '../../components/Dashboard/Chart2';\nclass Target extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          headerName: 'Machine Id',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Name',\n          field: 'name',\n          sortable: true,\n          filter: true\n        },\n\n        {\n          headerName: 'Stop Time',\n          field: 'stopTime',\n          sortable: true,\n          filter: true\n        }\n      ],\n      activeMachines: [],\n      disabledMachines: []\n    };\n    this.handleUpdateMachineTarget = this.handleUpdateMachineTarget.bind(this);\n    this.handleChangeMachineTarget = this.handleChangeMachineTarget.bind(this);\n  }\n\n  handleChangeMachineTarget = (id) => (e) => {\n    let activeMachines = this.state.activeMachines;\n    activeMachines.forEach((machine) => {\n      if (machine._id == id) {\n        machine.target = e.target.value;\n      }\n    });\n    this.setState({\n      activeMachines\n    });\n  };\n  handleUpdateMachineTarget = (machine) => (e) => {\n    console.log(machine);\n    const dataToSend = {\n      id: machine._id,\n      target: machine.target\n    };\n    axios\n      .post(baseUrl + '/machines/updateMachineTarget', dataToSend, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        this.setState({\n          isLoading: false\n        });\n        this.getActiveMachines();\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n\n  getActiveMachines = () => {\n    axios\n      .get(baseUrl + '/machines/getAllMachines', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        this.setState({\n          activeMachines: response.data.data\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n\n  getMaintananceMoodMachines = () => {\n    axios\n      .get(baseUrl + '/machines/getMaintainanceMoodMachines', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      })\n      .then((response) => {\n        console.log('response', response);\n        let data = response.data.data;\n        let machines = [];\n\n        data.forEach((machine) => {\n          machines.push({\n            machine: machine._id,\n            name: machine.name,\n            stopTime: moment().format('llll', machine.stopTime)\n          });\n        });\n        this.setState({\n          disabledMachines: machines\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isError: true,\n          error: error.response.data.error\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getActiveMachines();\n    this.getMaintananceMoodMachines();\n  }\n  getRandomBackground = () => {\n    let backgrounds = ['bg-danger', 'bg-warning', 'bg-success', 'bg-secondary'];\n    return backgrounds[Math.floor(Math.random() * backgrounds.length)];\n  };\n  render() {\n    return (\n      <div>\n        <Nav></Nav>\n        <Container fluid>\n          <Row>\n            <Col md={12} sm={12} className=\"bg-sky mt-5 \">\n              <h1>Targets</h1>\n              <Row className=\"mt-5\">\n                {this.state.activeMachines.map((machine) => {\n                  return (\n                    <Col md={3} sm={12}>\n                      <div\n                        key={machine._id}\n                        className={`${this.getRandomBackground()} d-flex justify-content-between my-card`}>\n                        <div className=\"d-flex flex-column\">\n                          <span className=\"my-card-number font-weight-bold text-white\">\n                            {machine.target}\n                          </span>\n                          <span className=\"text-white\">{machine.name}</span>\n                        </div>\n                        <div>\n                          <i className=\"fa fa-headphones fa-2x text-white\"></i>\n                        </div>\n                      </div>\n                    </Col>\n                  );\n                })}\n              </Row>\n              <Row>\n                <Col\n                  md={12}\n                  sm={12}\n                  className=\"chart\"\n                  style={{ marginTop: '20px' }}>\n                  {/* <MyChart></MyChart> */}\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Machine Name</th>\n                        <th>Target </th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.activeMachines.map((machine) => {\n                        return (\n                          <tr key={machine._id}>\n                            <td>{machine.name}</td>\n                            <td>{machine.target}</td>\n                            <td>\n                              <InputGroup className=\"mb-3\">\n                                <FormControl\n                                  placeholder=\"Target\"\n                                  aria-label=\"\"\n                                  type=\"number\"\n                                  value={machine.target}\n                                  onChange={this.handleChangeMachineTarget(\n                                    machine._id\n                                  )}\n                                  aria-describedby=\"basic-addon2\"\n                                />\n                                <InputGroup.Append>\n                                  <Button\n                                    onClick={this.handleUpdateMachineTarget(\n                                      machine\n                                    )}\n                                    variant=\"secondary\">\n                                    Update Target\n                                  </Button>\n                                </InputGroup.Append>\n                              </InputGroup>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 4, offset: 3 }} sm={12}>\n              <div\n                className=\"ag-theme-alpine\"\n                style={{ height: 200, width: 700 }}>\n                <h1 className=\"mt-5\">Maintanance Machines List</h1>\n                <AgGridReact\n                  rowData={this.state.disabledMachines}\n                  columnDefs={this.state.columns}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Target;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-machine/AddMachine.js",["419","420","421","422","423","424","425"],"import React, { useState } from 'react'\nimport Nav from '../Header/Header'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport Axios from 'axios';\nimport Swal from 'sweetalert';\n//swal(\"Hello world!\");\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [model, setModel] = useState('');\n    const [build, setBuild] = useState('');\n    const [status, setStatus] = useState(1);\n    const [target, setTarget] = useState(1);\n    const handleCreate = (e) => {\n        e.preventDefault();\n        if (name == '' || model == '' || build == '') {\n            Swal('please provid all required fields');\n        }\n        else {\n            const machineData = {\n                name, model, build, status, target\n            }\n            Axios.post('http://localhost:5000/api/v1/machines/addNewMachine', machineData)\n                .then((response) => {\n                    Swal(response.data.message);\n                }).catch((error) => {\n                    Swal(error.response.data.error);\n                })\n        }\n    }\n    return (\n        <div>\n            <h1 className='mt-3 text-center'>Add Machines</h1>\n            <Form onSubmit={handleCreate}>\n                <Form.Group >\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Name...\" />\n                </Form.Group>\n                <Form.Group >\n                    <Form.Label>Model</Form.Label>\n                    <Form.Control type=\"text\" value={model} onChange={e => setModel(e.target.value)} placeholder=\"Model...\" />\n                </Form.Group>\n                <Form.Group >\n                    <Form.Label>Build</Form.Label>\n                    <Form.Control type=\"text\" value={build} onChange={e => setBuild(e.target.value)} placeholder=\"Build...\" />\n                </Form.Group>\n                <Form.Group >\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control type=\"number\" value={status} onChange={e => setStatus(e.target.value)} placeholder=\"Status...\" />\n                </Form.Group>\n                <Form.Group >\n                    <Form.Label>Target</Form.Label>\n                    <Form.Control type=\"number\" value={target} onChange={e => setTarget(e.target.value)} placeholder=\"Target...\" />\n                </Form.Group>\n\n                <Button data-testid=\"add-machine\" className='btn-block mt-3 mb-3' variant=\"primary\" type=\"submit\">\n                    Add\n                            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Create\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-target/MachineUpdate.js",["426","427","428","429","430","431","432","433"],"import React, { Fragment, useEffect, useState } from 'react';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link } from 'react-router-dom';\nconst MachineUpdate = ({ history, match }) => {\n  const [machine, setMachine] = useState([]);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [model, setModel] = useState('');\n  const [target, setTarget] = useState('');\n  const [isLoadingMachine, setLoadingMachine] = useState(true);\n\n  const getSingleMachine = async () => {\n    try {\n      const response = await Axios.get(\n        `${baseUrl}/machines/getSingleMachineDetails/${match.params.machineId}`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n          }\n        }\n      );\n\n      console.log('Machine');\n      console.log(response.data);\n\n      setLoadingMachine(false);\n      setMachine(response.data);\n      setId(response.data._id);\n      setName(response.data.name);\n      setModel(response.data.model);\n      setTarget(response.data.target);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(async () => {\n    if (isLoadingMachine) {\n      getSingleMachine();\n    }\n  }, []);\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await Axios.put(\n        `${baseUrl}/machines/updateMachineInformation`,\n        { name, model, target, id },\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n          }\n        }\n      );\n\n      history.push('/machines/list');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <Fragment>\n      <Nav></Nav>\n      <Container></Container>\n      <div style={{ margin: 50 }}>\n        <h2>Update Machine</h2>\n        <form onSubmit={submitHandler}>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div className=\"form-group\">\n                <input type=\"hidden\" value={machine._id} name=\"id\" />\n                <label for=\"exampleInputEmail1\">Machine Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Machine name\"\n                  value={name}\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Machine Model</label>\n                <input\n                  type=\"text\"\n                  name=\"model\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Machine model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Machine Target</label>\n                <input\n                  type=\"text\"\n                  name=\"target\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Machine Target\"\n                  value={target}\n                  onChange={(e) => {\n                    setTarget(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Update Machine\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MachineUpdate;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-target/MachinesList.js",["434","435","436","437","438","439"],"import React, { Fragment, useEffect, useState } from 'react';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link } from 'react-router-dom';\n\nconst MachinesList = () => {\n  const [machines, setMachines] = useState([]);\n  const [isLoadingMachines, setLoadingMachines] = useState(true);\n\n  const getAllMachines = async () => {\n    try {\n      const response = await Axios.get(\n        baseUrl + '/machines/getAllMachinesWithAnyStatus',\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n          }\n        }\n      );\n\n      console.log('Machines');\n      console.log(response.data);\n\n      setLoadingMachines(false);\n      setMachines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(async () => {\n    if (isLoadingMachines) {\n      getAllMachines();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Nav></Nav>\n      <Container></Container>\n      <div style={{ margin: 50 }}>\n        <h3>Machines Target</h3>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Model</th>\n              <th scope=\"col\">Target</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {machines.map((machine) => (\n              <tr key={machine._id}>\n                <th>{machine.name}</th>\n                <td>{machine.model}</td>\n                <td>{machine.target}</td>\n                <td>{machine.status}</td>\n                <td>\n                  <Link to={`/machines/update/${machine._id}`}>\n                    <EditIcon></EditIcon>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MachinesList;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Map/Map.js",["440","441","442","443","444","445","446"],"import React from 'react'\nimport { GoogleMap, Marker } from \"react-google-maps\"\nimport Calendar from 'react-calendar';\nimport './Map.css'\nimport { Container, Row, Col, ListGroup, Table, InputGroup, FormCheck, ProgressBar } from 'react-bootstrap'\nimport Nav from '../Header/Header'\nconst Map = () => {\n    return (\n        <div>\n            <Nav></Nav>\n            <Container>\n                <h1>Map</h1>\n                <Row className='mt-5'>\n                    <Col md={12} sm={12}>\n\n                        <img style={{ width: '100%', height: '30%' }} src=\"https://i.pinimg.com/originals/16/0c/b9/160cb9d8b7bd8eb2da7004de84748233.png\" alt=\"\" />\n                        <button className=\"btn btn-warning mt-3\">Edit Or Move</button>\n                        <div className=\"mt-3\">\n                            <ListGroup as=\"ul\">\n                                <ListGroup.Item as=\"li\" active>\n                                    List of targets\n                            </ListGroup.Item>\n                                <ListGroup.Item as=\"li\">Dapibus ac facilisis in</ListGroup.Item>\n                                <ListGroup.Item as=\"li\" disabled>\n                                    Morbi leo risus\n                            </ListGroup.Item>\n                                <ListGroup.Item as=\"li\">Porta ac consectetur ac</ListGroup.Item>\n                            </ListGroup>\n\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Map\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/confirmation/Confirm.js",["447","448","449","450"],"import React, { Component } from 'react';\nimport Nav from '../Header/Header';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport { baseUrl } from './../../baseUrl';\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Table,\n  InputGroup,\n  FormCheck,\n  ProgressBar\n} from 'react-bootstrap';\nimport { AgGridReact } from 'ag-grid-react';\n\nclass Confirm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rawMaterialColumns: [\n        {\n          headerName: 'Raw Material Count',\n          field: 'count',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Machine',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n\n        {\n          headerName: 'Raw Material Type',\n          field: 'type',\n          sortable: true,\n          filter: true\n        },\n        { headerName: 'Date', field: 'date', sortable: true, filter: true }\n      ],\n      totalProductsProducingColumns: [\n        {\n          headerName: 'Product Count',\n          field: 'count',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Machine',\n          field: 'machine',\n          sortable: true,\n          filter: true\n        },\n        {\n          headerName: 'Product',\n          field: 'product',\n          sortable: true,\n          filter: true\n        },\n\n        { headerName: 'Date', field: 'date', sortable: true, filter: true }\n      ],\n      rawMaterials: [],\n      totalProductsProduced: []\n    };\n  }\n\n  getConfirmedProducts = () => {\n    Axios.get(baseUrl + '/products/getProductsProduced', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        const data = response.data.data;\n        let totalProductsProduced = [];\n        data.forEach((product) => {\n          totalProductsProduced.push({\n            count: product.count,\n            machine: product.machine.name,\n            product: product.product.name,\n            date: moment().format('llll', product.date)\n          });\n        });\n        this.setState({\n          totalProductsProduced: totalProductsProduced\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getRawMaterials = () => {\n    Axios.get(baseUrl + '/rawMaterials/getAllRawMaterials', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    })\n      .then((response) => {\n        const data = response.data.data;\n        let rawMaterials = [];\n        data.forEach((material) => {\n          rawMaterials.push({\n            count: material.count,\n            machine: material.machine.name,\n            type: material.type,\n            date: moment().format('llll', material.date)\n          });\n        });\n        this.setState({\n          rawMaterials: rawMaterials\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.getConfirmedProducts();\n    this.getRawMaterials();\n  }\n  render() {\n    return (\n      <div>\n        <Nav></Nav>\n        <Container>\n          <h1 className=\"mt-3\">Confirmation</h1>\n          <Row className=\"mt-3\">\n            <Col md={12} sm={12}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"active font-weight-bold\">\n                  Confirmed products\n                </ListGroup.Item>\n                <div\n                  className=\"ag-theme-alpine\"\n                  style={{ height: 400, width: 1110 }}>\n                  <AgGridReact\n                    rowData={this.state.totalProductsProduced}\n                    columnDefs={this.state.totalProductsProducingColumns}\n                  />\n                </div>\n              </ListGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={8} sm={12}>\n              <ListGroup className=\"mt-5\" variant=\"flush\">\n                <ListGroup.Item\n                  className=\"active font-weight-bold \"\n                  style={{ width: 1110 }}>\n                  Stock list\n                </ListGroup.Item>\n                <div\n                  className=\"ag-theme-alpine\"\n                  style={{ height: 400, width: 1110 }}>\n                  <AgGridReact\n                    rowData={this.state.rawMaterials}\n                    columnDefs={this.state.rawMaterialColumns}\n                  />\n                </div>\n              </ListGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Confirm;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/add-form/AddForm.js",["451","452","453","454","455","456"],"import React, { useState } from \"react\";\nimport Nav from \"../Header/Header\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport ProductForm from \"../add-product/AddProduct\";\nimport MachineFrom from \"../add-machine/AddMachine\";\nimport MaterialFrom from \"../add-material/AddMaterial\";\nimport AssignFrom from \"../orders/GenerateOrderForm\";\nconst AddForm = () => {\n  const [form, setForm] = useState(0);\n  return (\n    <div>\n      <Nav></Nav>\n      <Container>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }}>\n            <div className='mt-3 d-flex justify-content-between align-items-center'>\n              <input\n                type='radio'\n                name='form'\n                checked={form === 0 && true}\n                onChange={() => setForm(0)}\n              />\n              <label>Add Product</label>\n              <input\n                type='radio'\n                name='form'\n                checked={form === 1 && true}\n                onChange={() => setForm(1)}\n              />\n              <label>Add Machine</label>\n              <input\n                type='radio'\n                name='form'\n                checked={form === 2 && true}\n                onChange={() => setForm(2)}\n              />\n              <label>Add Raw Material</label>\n              <input\n                type='radio'\n                checked={form === 3 && true}\n                name='form'\n                onChange={() => setForm(3)}\n              />\n              <label>Assign Order</label>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }}>\n            {form == 0 ? (\n              <ProductForm></ProductForm>\n            ) : form == 1 ? (\n              <MachineFrom></MachineFrom>\n            ) : form == 2 ? (\n              <MaterialFrom></MaterialFrom>\n            ) : form == 3 ? (\n              <AssignFrom></AssignFrom>\n            ) : (\n              <ProductForm></ProductForm>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default AddForm;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/Page3.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/HomePage.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/machines-status/MachinesStatus.js",["457","458","459","460"],"import React, { Fragment, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './MachinesStatus.css';\nimport Nav from '../Header/Header';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nconst socket = io('http://localhost:5000');\nconst MachinesStatus = () => {\n  const [machines, setMessage] = useState([]);\n  const colors = {\n    1: 'orange',\n    2: 'red',\n    3: 'yellow',\n    4: 'green',\n    5: 'purpole',\n    6: 'red',\n    7: 'red',\n    8: 'grey'\n  };\n\n  useEffect(() => {\n    socket.on('machines', (payload) => {\n      setMessage(payload);\n    });\n\n    // // CLEAN UP THE EFFECT\n    // return () => socket.disconnect();\n  });\n\n  return (\n    <Fragment>\n      <Nav></Nav>\n      <Container />\n      <div style={{ margin: 20 }}>\n        <h1>Machines Map</h1>\n        <div class=\"row\">\n          {machines.map((machine) => (\n            <div\n              key={machine._id}\n              className=\"machine-card\"\n              style={{\n                backgroundColor: `${colors[machine.status]}`\n              }}>\n              <h5 className=\"card-title\">{`${machine.name}`}</h5>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MachinesStatus;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/baseUrl.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/types.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/healthActions.js",["461","462","463"],"import * as Type from './types';\nimport { get, post, put, deleteApi } from '../api';\n\nexport const createAccident = (form) => async (dispatch) => {\n  try {\n    const res = await post(`/health/createAccident`, form);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAccident = (form) => async (dispatch) => {\n  try {\n    const res = await get(`/health/getAccident`);\n    dispatch({\n      type: Type.GET_ACCIDENT,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getlLocationAccident = (form) => async (dispatch) => {\n  try {\n    const res = await get(`/health/getlLocationAccident`);\n    dispatch({\n      type: Type.GET_LOCATION_ACCIDENT,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Header/Header.js",["464"],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/layouts/AgGridLayout.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Form.js",["465","466","467","468","469"],"import React, { useRef, useState } from 'react';\nimport moment from 'moment';\n//check\nimport { useSelector } from 'react-redux';\nimport SignatureCanvas from 'react-signature-canvas';\nimport DateTimePicker from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Hse.css';\n\nimport { Form, Button, Spinner } from 'react-bootstrap';\nconst HealthSafetyForm = ({\n  setaccidentForm,\n  accidentForm,\n  submitHandler,\n  isLoading\n}) => {\n  const { user } = useSelector((state) => ({\n    user: state.app.user\n  }));\n  const yesterday = DateTimePicker.moment().subtract(1, 'day');\n  const valid = function (current) {\n    return current.isAfter(yesterday);\n  };\n  const sigCanvas = useRef({});\n  const clear = (e) => {\n    e.preventDefault();\n    sigCanvas.current.clear();\n  };\n  const save = (e) => {\n    e.preventDefault();\n    // console.log(sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\"))\n    setaccidentForm({\n      ...accidentForm,\n      signature: sigCanvas.current.getTrimmedCanvas().toDataURL('image/png')\n    });\n  };\n  const changeHandler = (e) => {\n    setaccidentForm({\n      ...accidentForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const {\n    Injury,\n    FirstAid,\n    location,\n    Equipment,\n    Description,\n    image,\n    signature,\n    bodyPart\n  } = accidentForm;\n  return (\n    <>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Injury</Form.Label>\n          <Form.Control\n            name=\"Injury\"\n            type=\"text\"\n            value={Injury}\n            placeholder=\"Injury \"\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>First Aid</Form.Label>\n          <Form.Control\n            name=\"FirstAid\"\n            type=\"text\"\n            value={FirstAid}\n            placeholder=\"First aid\"\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Location near</Form.Label>\n          <Form.Control\n            name=\"location\"\n            type=\"text\"\n            value={location}\n            placeholder=\"Location..\"\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n\n        <strong>Person reporting info</strong>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Id</Form.Label>\n          <Form.Control\n            value={user._id}\n            disabled={true}\n            type=\"text\"\n            placeholder=\"id\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Equipment</Form.Label>\n          <Form.Control\n            name=\"Equipment\"\n            type=\"text\"\n            value={Equipment}\n            placeholder=\"Equipment\"\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <strong>Event datails</strong>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Time</Form.Label>\n          <DateTimePicker\n            initialValue={accidentForm.Date}\n            isValidDate={valid}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Description</Form.Label>\n          <textarea\n            cols=\"30\"\n            rows=\"5\"\n            name=\"Description\"\n            value={Description}\n            placeholder=\"Description\"\n            className=\"form-control\"\n            onChange={(e) => changeHandler(e)}></textarea>\n        </Form.Group>\n        <Form.Group>\n          <Form.File\n            name=\"image\"\n            onChange={(e) => {\n              setaccidentForm({\n                ...accidentForm,\n                image: e.target.files[0]\n              });\n            }}\n            id=\"exampleFormControlFile1\"\n            label=\"Site image\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <SignatureCanvas\n            // onBegin={ changeColor}\n            penColor=\"black\" //{changeColor.toString() }\n            ref={sigCanvas}\n            canvasProps={{ width: 500, height: 200, className: 'sigCanvas' }}\n          />\n        </Form.Group>\n        <div>\n          <button className=\"clearButton\" onClick={clear}>\n            clear\n          </button>\n          <button className=\"saveButton\" onClick={save}>\n            save\n          </button>\n        </div>\n        <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\n          {isLoading && (\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          )}{' '}\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default HealthSafetyForm;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Top-Container.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/health-safety/Buttom-Container.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/components/Dashboard/layouts/ChartLayout.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/teamsActions.js",["470","471","472","473","474"],"import { baseUrl } from '../baseUrl';\nimport _ from 'lodash';\nimport { get, post, put, deleteApi } from '../api';\n\nimport axios from 'axios';\nimport * as Type from './types';\n\nexport const createTeam = (name, member) => async (dispatch) => {\n  try {\n    let members = [];\n    member.forEach((m) => {\n      members.push({ memberId: m.id, memberName: m.displayName });\n    });\n\n    const res = await axios.post(\n      `${baseUrl}/teams/createTeam`,\n      { name: name, members: members },\n      {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      }\n    );\n    dispatch(getAllTeams());\n    return true;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\n\nexport const getAllTeams = () => async (dispatch) => {\n  try {\n    const teams = await axios.get(`${baseUrl}/teams/getAllTeams`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    });\n    dispatch({\n      type: Type.GET_ALL_TEAM,\n      payload: teams.data.data\n    });\n  } catch (error) {\n    debugger;\n    const token = localStorage.getItem('CRM_TOKEN');\n    console.log(token);\n    debugger;\n    console.log(error);\n  }\n};\nexport const getMyTeams = () => async (dispatch) => {\n  try {\n    const res = await get('/teams/getMyTeams');\n    dispatch({\n      type: Type.GET_MY_TEAMS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/projectActions.js",["475","476","477"],"import { baseUrl } from '../baseUrl';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport * as Type from './types';\n\nexport const createProject = (name, des, date) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${baseUrl}/projects/createProject`,\n      { project: name, description: des, dueDate: date },\n      {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      }\n    );\n    dispatch(getAllProject());\n    return true;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\nexport const assignProject = (id, teamId) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${baseUrl}/projects/assignProject`,\n      { id: id, teamId: teamId },\n      {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n        }\n      }\n    );\n    dispatch(getAllProject());\n    return true;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\n\nexport const getAllProject = () => async (dispatch) => {\n  try {\n    const projects = await axios.get(`${baseUrl}/projects/getAllProjects`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('CRM_TOKEN')\n      }\n    });\n    dispatch({\n      type: Type.GET_ALL_PROJECTS,\n      payload: projects.data.data\n    });\n  } catch (error) {\n    debugger;\n    const token = localStorage.getItem('CRM_TOKEN');\n    console.log(token);\n    debugger;\n    console.log(error);\n  }\n};\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/userActions.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Staff_view/Big.js",["478","479"],"import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport moment from 'moment';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\nimport { Draggable } from '@fullcalendar/interaction';\nconst Big = ({ projects }) => {\n  return (\n    <div>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        weekends={false}\n        events={projects.map((s) => {\n          return {\n            title: s.project,\n            date: moment(s.dueDate).format('YYYY-MM-DD')\n          };\n        })}\n      />\n    </div>\n  );\n};\n\nexport default Big;\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/actions/staffAction.js",["480","481"],"import { toast } from 'react-toastify';\nimport * as Type from './types';\nimport { get, post, put, deleteApi } from '../api';\nexport const getEmployeeOrders = () => async (dispatch) => {\n  try {\n    const res = await get(`/orders/getEmployeeOrders`);\n    dispatch({\n      type: Type.GET_EMPLOYEE_ORDERS,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const getEmployeeOrdersForStaffPage = () => async (dispatch) => {\n  try {\n    const res = await get(`/orders/getEmployeeOrdersForStaffPage`);\n    dispatch({\n      type: Type.GET_ORDER_FOR_STAFF,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const getStaff = () => async (dispatch) => {\n  try {\n    const res = await get(`/auth/getStaff`);\n    dispatch({\n      type: Type.GET_ALL_STAFF,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const getEmployeeAndStaff = () => async (dispatch) => {\n  try {\n    const res = await get(`/auth/getEmployeeAndStaff`);\n    dispatch({\n      type: Type.GET_ALL_EMPLOYEE_STAFF,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const updatePaymentStatus = (state) => async (dispatch) => {\n  post('/auth/updatePaymentStatus', { id: state })\n    .then((response) => {\n      toast.success('Payment is Paid');\n      dispatch(getEmployeeAndStaff());\n      dispatch(getStaff());\n    })\n    .catch((error) => {\n      toast.error(error.response.data.error);\n    });\n};\nexport const updateToVip = (data) => async (dispatch) => {\n  try {\n    await post('/orders/updateOrderStatus', data);\n    dispatch(getEmployeeOrders());\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const processedOrder = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/processedOrder`);\n    dispatch({\n      type: Type.PROCESSED_ORDER,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const wipOrder = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/wipOrder`);\n    dispatch({\n      type: Type.WIP_ORDER,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const plannedOrder = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/plannedOrder`);\n    dispatch({\n      type: Type.PLANNED_ORDER,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const pieChartOrders = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/pieChartOrders`);\n    dispatch({\n      type: Type.PIE_CHART_EMP_DATA,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const weeklyOrdersPrice = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/weeklyOrdersPrice`);\n    dispatch({\n      type: Type.WEEKLY_ORDER_PRICES,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const monthlyOrdersPrice = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/monthlyOrdersPrice`);\n    dispatch({\n      type: Type.MONTHLY_ORDER_PRICES,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const yearlyOrdersPrice = () => async (dispatch) => {\n  try {\n    debugger;\n    const res = await get(`/orders/yearlyOrdersPrice`);\n    dispatch({\n      type: Type.YEARLY_ORDER_PRICES,\n      payload: res.data\n    });\n  } catch (error) {\n    toast.error(error.response.data.error);\n  }\n};\nexport const updateOrderDone = (data) => async (dispatch) => {\n  try {\n    await post('/orders/updateOrderStatus', data);\n    dispatch(getEmployeeOrders());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateOrderAcceptOrReject = (data) => async (dispatch) => {\n  try {\n    await post('/orders/updateOrderStatus', data);\n    dispatch(getEmployeeOrders());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const completedProject = (data) => async (dispatch) => {\n  try {\n    const res = get('/projects/completedProject');\n    dispatch({\n      type: Type.COMPLETED_PROJECTS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AssgnModal/AssignModal.js",["482","483","484"],"import React, { useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { assignProject } from \"../../../../actions/projectActions\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\n\nconst AddTeamModal = props => {\n  const {\n    buttonLabel,\n    className,\n    toggle,\n    modal,\n    teams,\n    assignProject,\n    Id,\n    projects,\n    projectId,\n  } = props;\n  const [Team, setTeam] = useState({\n    team: null,\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    const res = await assignProject(projectId, Team.team);\n    if (res) {\n      toggle(Id);\n    }\n  };\n  return (\n    <div>\n      <Modal\n        isOpen={modal}\n        toggle={() => {\n          toggle(Id);\n        }}\n        className={className}\n      >\n        <ModalHeader toggle={toggle}>Add Team</ModalHeader>\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label htmlFor='exampleEmail'>Select Team </Label>\n              <Autocomplete\n                id='exampleEmail'\n                options={_.uniqBy(teams, t => {\n                  return t.team._id;\n                }).filter(t => {\n                  if (\n                    !projects\n                      .filter(p => p.team)\n                      .some(p => p.team.toString() === t.team._id.toString())\n                  )\n                    return t;\n                })}\n                getOptionLabel={option => (option ? option.team.name : [])}\n                onChange={(e, value) => {\n                  setTeam({\n                    team: value.team._id,\n                  });\n                }}\n                filterSelectedOptions\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    variant='outlined'\n                    placeholder='Favorites'\n                  />\n                )}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color='primary'\n              onClick={() => {\n                toggle(Id);\n              }}\n            >\n              Cancel\n            </Button>{\" \"}\n            <Button color='secondary' type='submit'>\n              Assign Project\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default connect(null, { assignProject })(AddTeamModal);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AddProject/AddProjectModal.js",["485"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { createProject } from \"../../../../actions/projectActions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\n\nconst AddProjectModal = props => {\n  const { buttonLabel, className, toggle, modal, createProject } = props;\n  const [Project, setProject] = useState({\n    name: \"\",\n    description: \"\",\n    dueDate: \"\",\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    const res = await createProject(\n      Project.name,\n      Project.description,\n      moment(Project.dueDate)\n    );\n    if (res) {\n      toggle();\n    }\n  };\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Add Project</ModalHeader>\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label htmlFor='exampleEmail'>Project Name</Label>\n              <Input\n                type='text'\n                name='team'\n                id='exampleEmail'\n                value={Project.name}\n                onChange={e => {\n                  setProject({\n                    ...Project,\n                    name: e.target.value,\n                  });\n                }}\n                placeholder='Write Project Name'\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='exampleText'>Project Description</Label>\n              <Input\n                type='textarea'\n                name='text'\n                id='exampleText'\n                placeholder='Write Project Description'\n                value={Project.description}\n                onChange={e => {\n                  setProject({\n                    ...Project,\n                    description: e.target.value,\n                  });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='exampleDate'>Due Date</Label>\n              <Input\n                type='date'\n                name='date'\n                id='exampleDate'\n                value={Project.dueDate}\n                onChange={e => {\n                  debugger;\n                  console.log(e.target.value);\n                  setProject({\n                    ...Project,\n                    dueDate: e.target.value,\n                  });\n                }}\n                placeholder='date placeholder'\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color='primary' onClick={toggle}>\n              Cancel\n            </Button>{\" \"}\n            <Button color='secondary' type='submit'>\n              Create Project\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default connect(null, { createProject })(AddProjectModal);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Manager_view/components/AddteamModel/AddTeamModel.js",["486","487"],"import React, { useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { createTeam } from '../../../../actions/teamsActions';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Form,\n  FormGroup\n} from 'reactstrap';\n\nconst AddTeamModal = (props) => {\n  const {\n    buttonLabel,\n    className,\n    toggle,\n    modal,\n    employees,\n    employeeAndStaff,\n    createTeam\n  } = props;\n  const [Team, setTeam] = useState({\n    name: '',\n    members: []\n  });\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const res = await createTeam(Team.name, Team.members);\n    if (res) {\n      toggle();\n    }\n  };\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Add Team</ModalHeader>\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label htmlFor=\"exampleEmail\">Team Name</Label>\n              <Input\n                type=\"text\"\n                name=\"team\"\n                id=\"exampleEmail\"\n                onChange={(e) => {\n                  setTeam({\n                    ...Team,\n                    name: e.target.value\n                  });\n                }}\n                placeholder=\"Write Team Name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"exampleEmail\">Select Team Members</Label>\n              <Autocomplete\n                multiple\n                id=\"exampleEmail\"\n                options={employeeAndStaff}\n                getOptionLabel={(option) => option.displayName}\n                onChange={(e, value) => {\n                  setTeam({\n                    ...Team,\n                    members: value\n                  });\n                }}\n                filterSelectedOptions\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    placeholder=\"Favorites\"\n                  />\n                )}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggle}>\n              Cancel\n            </Button>{' '}\n            <Button color=\"secondary\" type=\"submit\">\n              Create Team\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default connect(null, { createTeam })(AddTeamModal);\n","/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reducers/index.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/pages/Header/SliderData.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/utils/functions.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/reducers/appReducer.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/index.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/delete.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/post.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/put.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/get.js",[],"/Users/seemabarshad/Desktop/learn-gitlab-master/client/src/api/baseUrl.js",[],{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":16},{"ruleId":"492","severity":1,"message":"496","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":20},{"ruleId":"492","severity":1,"message":"497","line":17,"column":25,"nodeType":"494","messageId":"495","endLine":17,"endColumn":33},{"ruleId":"492","severity":1,"message":"498","line":25,"column":7,"nodeType":"494","messageId":"495","endLine":25,"endColumn":11},{"ruleId":"492","severity":1,"message":"499","line":32,"column":7,"nodeType":"494","messageId":"495","endLine":32,"endColumn":12},{"ruleId":"492","severity":1,"message":"500","line":33,"column":7,"nodeType":"494","messageId":"495","endLine":33,"endColumn":12},{"ruleId":"492","severity":1,"message":"501","line":34,"column":7,"nodeType":"494","messageId":"495","endLine":34,"endColumn":12},{"ruleId":"492","severity":1,"message":"502","line":35,"column":7,"nodeType":"494","messageId":"495","endLine":35,"endColumn":12},{"ruleId":"492","severity":1,"message":"503","line":36,"column":7,"nodeType":"494","messageId":"495","endLine":36,"endColumn":12},{"ruleId":"492","severity":1,"message":"504","line":37,"column":7,"nodeType":"494","messageId":"495","endLine":37,"endColumn":15},{"ruleId":"492","severity":1,"message":"505","line":38,"column":7,"nodeType":"494","messageId":"495","endLine":38,"endColumn":15},{"ruleId":"492","severity":1,"message":"506","line":39,"column":7,"nodeType":"494","messageId":"495","endLine":39,"endColumn":15},{"ruleId":"492","severity":1,"message":"507","line":43,"column":7,"nodeType":"494","messageId":"495","endLine":43,"endColumn":14},{"ruleId":"492","severity":1,"message":"508","line":49,"column":7,"nodeType":"494","messageId":"495","endLine":49,"endColumn":12},{"ruleId":"492","severity":1,"message":"509","line":51,"column":7,"nodeType":"494","messageId":"495","endLine":51,"endColumn":17},{"ruleId":"492","severity":1,"message":"510","line":52,"column":7,"nodeType":"494","messageId":"495","endLine":52,"endColumn":24},{"ruleId":"492","severity":1,"message":"511","line":55,"column":7,"nodeType":"494","messageId":"495","endLine":55,"endColumn":13},{"ruleId":"492","severity":1,"message":"512","line":56,"column":7,"nodeType":"494","messageId":"495","endLine":56,"endColumn":11},{"ruleId":"492","severity":1,"message":"513","line":57,"column":7,"nodeType":"494","messageId":"495","endLine":57,"endColumn":14},{"ruleId":"492","severity":1,"message":"514","line":60,"column":7,"nodeType":"494","messageId":"495","endLine":60,"endColumn":10},{"ruleId":"492","severity":1,"message":"515","line":61,"column":7,"nodeType":"494","messageId":"495","endLine":61,"endColumn":18},{"ruleId":"492","severity":1,"message":"516","line":64,"column":7,"nodeType":"494","messageId":"495","endLine":64,"endColumn":17},{"ruleId":"492","severity":1,"message":"517","line":65,"column":7,"nodeType":"494","messageId":"495","endLine":65,"endColumn":17},{"ruleId":"492","severity":1,"message":"518","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":9},{"ruleId":"519","severity":1,"message":"520","line":34,"column":6,"nodeType":"521","endLine":34,"endColumn":8,"suggestions":"522"},{"ruleId":"523","severity":1,"message":"524","line":41,"column":21,"nodeType":"525","messageId":"526","endLine":41,"endColumn":23},{"ruleId":"523","severity":1,"message":"524","line":46,"column":22,"nodeType":"525","messageId":"526","endLine":46,"endColumn":24},{"ruleId":"523","severity":1,"message":"524","line":56,"column":25,"nodeType":"525","messageId":"526","endLine":56,"endColumn":27},{"ruleId":"523","severity":1,"message":"524","line":76,"column":20,"nodeType":"525","messageId":"526","endLine":76,"endColumn":22},{"ruleId":"523","severity":1,"message":"524","line":86,"column":30,"nodeType":"525","messageId":"526","endLine":86,"endColumn":32},{"ruleId":"492","severity":1,"message":"527","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":29},{"ruleId":"492","severity":1,"message":"529","line":3,"column":31,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":3,"column":37,"nodeType":"494","messageId":"495","endLine":3,"endColumn":43},{"ruleId":"492","severity":1,"message":"531","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"532","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":14},{"ruleId":"492","severity":1,"message":"533","line":22,"column":10,"nodeType":"494","messageId":"495","endLine":22,"endColumn":18},{"ruleId":"519","severity":1,"message":"534","line":77,"column":13,"nodeType":"535","endLine":81,"endColumn":4},{"ruleId":"519","severity":1,"message":"536","line":81,"column":6,"nodeType":"521","endLine":81,"endColumn":8,"suggestions":"537"},{"ruleId":"492","severity":1,"message":"538","line":4,"column":31,"nodeType":"494","messageId":"495","endLine":4,"endColumn":40},{"ruleId":"539","severity":1,"message":"540","line":68,"column":33,"nodeType":"541","endLine":68,"endColumn":45},{"ruleId":"492","severity":1,"message":"542","line":15,"column":10,"nodeType":"494","messageId":"495","endLine":15,"endColumn":21},{"ruleId":"492","severity":1,"message":"543","line":22,"column":3,"nodeType":"494","messageId":"495","endLine":22,"endColumn":14},{"ruleId":"523","severity":1,"message":"524","line":190,"column":25,"nodeType":"525","messageId":"526","endLine":190,"endColumn":27},{"ruleId":"523","severity":1,"message":"524","line":291,"column":14,"nodeType":"525","messageId":"526","endLine":291,"endColumn":16},{"ruleId":"492","severity":1,"message":"532","line":10,"column":10,"nodeType":"494","messageId":"495","endLine":10,"endColumn":14},{"ruleId":"492","severity":1,"message":"544","line":11,"column":8,"nodeType":"494","messageId":"495","endLine":11,"endColumn":9},{"ruleId":"492","severity":1,"message":"545","line":14,"column":19,"nodeType":"494","messageId":"495","endLine":14,"endColumn":30},{"ruleId":"492","severity":1,"message":"546","line":20,"column":10,"nodeType":"494","messageId":"495","endLine":20,"endColumn":18},{"ruleId":"492","severity":1,"message":"547","line":27,"column":10,"nodeType":"494","messageId":"495","endLine":27,"endColumn":20},{"ruleId":"523","severity":1,"message":"524","line":32,"column":27,"nodeType":"525","messageId":"526","endLine":32,"endColumn":29},{"ruleId":"523","severity":1,"message":"524","line":32,"column":58,"nodeType":"525","messageId":"526","endLine":32,"endColumn":60},{"ruleId":"523","severity":1,"message":"524","line":37,"column":32,"nodeType":"525","messageId":"526","endLine":37,"endColumn":34},{"ruleId":"519","severity":1,"message":"548","line":118,"column":6,"nodeType":"521","endLine":118,"endColumn":8,"suggestions":"549"},{"ruleId":"550","severity":1,"message":"551","line":189,"column":35,"nodeType":"541","endLine":192,"endColumn":37},{"ruleId":"550","severity":1,"message":"551","line":229,"column":35,"nodeType":"541","endLine":232,"endColumn":37},{"ruleId":"550","severity":1,"message":"551","line":263,"column":23,"nodeType":"541","endLine":266,"endColumn":25},{"ruleId":"550","severity":1,"message":"551","line":297,"column":29,"nodeType":"541","endLine":300,"endColumn":31},{"ruleId":"550","severity":1,"message":"551","line":308,"column":29,"nodeType":"541","endLine":311,"endColumn":31},{"ruleId":"550","severity":1,"message":"551","line":325,"column":25,"nodeType":"541","endLine":328,"endColumn":27},{"ruleId":"492","severity":1,"message":"552","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":14},{"ruleId":"492","severity":1,"message":"553","line":11,"column":3,"nodeType":"494","messageId":"495","endLine":11,"endColumn":8},{"ruleId":"492","severity":1,"message":"554","line":12,"column":3,"nodeType":"494","messageId":"495","endLine":12,"endColumn":13},{"ruleId":"492","severity":1,"message":"555","line":13,"column":3,"nodeType":"494","messageId":"495","endLine":13,"endColumn":12},{"ruleId":"492","severity":1,"message":"543","line":14,"column":3,"nodeType":"494","messageId":"495","endLine":14,"endColumn":14},{"ruleId":"492","severity":1,"message":"556","line":16,"column":10,"nodeType":"494","messageId":"495","endLine":16,"endColumn":18},{"ruleId":"519","severity":1,"message":"557","line":35,"column":6,"nodeType":"521","endLine":35,"endColumn":8,"suggestions":"558"},{"ruleId":"523","severity":1,"message":"524","line":199,"column":29,"nodeType":"525","messageId":"526","endLine":199,"endColumn":31},{"ruleId":"523","severity":1,"message":"524","line":211,"column":29,"nodeType":"525","messageId":"526","endLine":211,"endColumn":31},{"ruleId":"523","severity":1,"message":"524","line":262,"column":31,"nodeType":"525","messageId":"526","endLine":262,"endColumn":33},{"ruleId":"492","severity":1,"message":"559","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":11},{"ruleId":"492","severity":1,"message":"560","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":19},{"ruleId":"492","severity":1,"message":"527","line":5,"column":21,"nodeType":"494","messageId":"495","endLine":5,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":5,"column":26,"nodeType":"494","messageId":"495","endLine":5,"endColumn":29},{"ruleId":"523","severity":1,"message":"524","line":111,"column":35,"nodeType":"525","messageId":"526","endLine":111,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":39,"column":6,"nodeType":"521","endLine":39,"endColumn":8,"suggestions":"561"},{"ruleId":"523","severity":1,"message":"524","line":210,"column":49,"nodeType":"525","messageId":"526","endLine":210,"endColumn":51},{"ruleId":"523","severity":1,"message":"524","line":258,"column":49,"nodeType":"525","messageId":"526","endLine":258,"endColumn":51},{"ruleId":"492","severity":1,"message":"562","line":16,"column":17,"nodeType":"494","messageId":"495","endLine":16,"endColumn":25},{"ruleId":"519","severity":1,"message":"563","line":57,"column":6,"nodeType":"521","endLine":57,"endColumn":8,"suggestions":"564"},{"ruleId":"492","severity":1,"message":"565","line":1,"column":38,"nodeType":"494","messageId":"495","endLine":1,"endColumn":46},{"ruleId":"492","severity":1,"message":"566","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":20},{"ruleId":"492","severity":1,"message":"567","line":7,"column":8,"nodeType":"494","messageId":"495","endLine":7,"endColumn":18},{"ruleId":"492","severity":1,"message":"560","line":8,"column":10,"nodeType":"494","messageId":"495","endLine":8,"endColumn":19},{"ruleId":"492","severity":1,"message":"527","line":8,"column":21,"nodeType":"494","messageId":"495","endLine":8,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":8,"column":26,"nodeType":"494","messageId":"495","endLine":8,"endColumn":29},{"ruleId":"492","severity":1,"message":"568","line":17,"column":17,"nodeType":"494","messageId":"495","endLine":17,"endColumn":25},{"ruleId":"519","severity":1,"message":"569","line":54,"column":6,"nodeType":"521","endLine":54,"endColumn":8,"suggestions":"570"},{"ruleId":"523","severity":1,"message":"524","line":69,"column":13,"nodeType":"525","messageId":"526","endLine":69,"endColumn":15},{"ruleId":"523","severity":1,"message":"524","line":71,"column":15,"nodeType":"525","messageId":"526","endLine":71,"endColumn":17},{"ruleId":"523","severity":1,"message":"524","line":72,"column":18,"nodeType":"525","messageId":"526","endLine":72,"endColumn":20},{"ruleId":"523","severity":1,"message":"524","line":73,"column":15,"nodeType":"525","messageId":"526","endLine":73,"endColumn":17},{"ruleId":"523","severity":1,"message":"524","line":74,"column":21,"nodeType":"525","messageId":"526","endLine":74,"endColumn":23},{"ruleId":"571","severity":1,"message":"572","line":74,"column":26,"nodeType":"573","messageId":"574","endLine":74,"endColumn":27},{"ruleId":"523","severity":1,"message":"524","line":75,"column":15,"nodeType":"525","messageId":"526","endLine":75,"endColumn":17},{"ruleId":"492","severity":1,"message":"560","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":19},{"ruleId":"492","severity":1,"message":"527","line":4,"column":21,"nodeType":"494","messageId":"495","endLine":4,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":4,"column":26,"nodeType":"494","messageId":"495","endLine":4,"endColumn":29},{"ruleId":"492","severity":1,"message":"532","line":10,"column":10,"nodeType":"494","messageId":"495","endLine":10,"endColumn":14},{"ruleId":"492","severity":1,"message":"575","line":10,"column":16,"nodeType":"494","messageId":"495","endLine":10,"endColumn":26},{"ruleId":"523","severity":1,"message":"524","line":161,"column":29,"nodeType":"525","messageId":"526","endLine":161,"endColumn":31},{"ruleId":"523","severity":1,"message":"524","line":192,"column":29,"nodeType":"525","messageId":"526","endLine":192,"endColumn":31},{"ruleId":"523","severity":1,"message":"524","line":211,"column":29,"nodeType":"525","messageId":"526","endLine":211,"endColumn":31},{"ruleId":"523","severity":1,"message":"524","line":217,"column":36,"nodeType":"525","messageId":"526","endLine":217,"endColumn":38},{"ruleId":"523","severity":1,"message":"524","line":223,"column":36,"nodeType":"525","messageId":"526","endLine":223,"endColumn":38},{"ruleId":"492","severity":1,"message":"576","line":236,"column":13,"nodeType":"494","messageId":"495","endLine":236,"endColumn":21},{"ruleId":"492","severity":1,"message":"538","line":11,"column":3,"nodeType":"494","messageId":"495","endLine":11,"endColumn":12},{"ruleId":"492","severity":1,"message":"577","line":18,"column":8,"nodeType":"494","messageId":"495","endLine":18,"endColumn":15},{"ruleId":"523","severity":1,"message":"524","line":54,"column":23,"nodeType":"525","messageId":"526","endLine":54,"endColumn":25},{"ruleId":"492","severity":1,"message":"559","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":11},{"ruleId":"492","severity":1,"message":"560","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":19},{"ruleId":"492","severity":1,"message":"527","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":29},{"ruleId":"523","severity":1,"message":"524","line":15,"column":18,"nodeType":"525","messageId":"526","endLine":15,"endColumn":20},{"ruleId":"523","severity":1,"message":"524","line":15,"column":33,"nodeType":"525","messageId":"526","endLine":15,"endColumn":35},{"ruleId":"523","severity":1,"message":"524","line":15,"column":48,"nodeType":"525","messageId":"526","endLine":15,"endColumn":50},{"ruleId":"492","severity":1,"message":"527","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":29},{"ruleId":"492","severity":1,"message":"529","line":3,"column":31,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":3,"column":37,"nodeType":"494","messageId":"495","endLine":3,"endColumn":43},{"ruleId":"492","severity":1,"message":"531","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"532","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":14},{"ruleId":"519","severity":1,"message":"534","line":40,"column":13,"nodeType":"535","endLine":44,"endColumn":4},{"ruleId":"519","severity":1,"message":"578","line":44,"column":6,"nodeType":"521","endLine":44,"endColumn":8,"suggestions":"579"},{"ruleId":"492","severity":1,"message":"527","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":29},{"ruleId":"492","severity":1,"message":"529","line":3,"column":31,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":3,"column":37,"nodeType":"494","messageId":"495","endLine":3,"endColumn":43},{"ruleId":"519","severity":1,"message":"534","line":33,"column":13,"nodeType":"535","endLine":37,"endColumn":4},{"ruleId":"519","severity":1,"message":"580","line":37,"column":6,"nodeType":"521","endLine":37,"endColumn":8,"suggestions":"581"},{"ruleId":"492","severity":1,"message":"582","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":19},{"ruleId":"492","severity":1,"message":"583","line":2,"column":21,"nodeType":"494","messageId":"495","endLine":2,"endColumn":27},{"ruleId":"492","severity":1,"message":"584","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":16},{"ruleId":"492","severity":1,"message":"553","line":5,"column":42,"nodeType":"494","messageId":"495","endLine":5,"endColumn":47},{"ruleId":"492","severity":1,"message":"554","line":5,"column":49,"nodeType":"494","messageId":"495","endLine":5,"endColumn":59},{"ruleId":"492","severity":1,"message":"555","line":5,"column":61,"nodeType":"494","messageId":"495","endLine":5,"endColumn":70},{"ruleId":"492","severity":1,"message":"543","line":5,"column":72,"nodeType":"494","messageId":"495","endLine":5,"endColumn":83},{"ruleId":"492","severity":1,"message":"553","line":11,"column":3,"nodeType":"494","messageId":"495","endLine":11,"endColumn":8},{"ruleId":"492","severity":1,"message":"554","line":12,"column":3,"nodeType":"494","messageId":"495","endLine":12,"endColumn":13},{"ruleId":"492","severity":1,"message":"555","line":13,"column":3,"nodeType":"494","messageId":"495","endLine":13,"endColumn":12},{"ruleId":"492","severity":1,"message":"543","line":14,"column":3,"nodeType":"494","messageId":"495","endLine":14,"endColumn":14},{"ruleId":"492","severity":1,"message":"529","line":3,"column":31,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":3,"column":37,"nodeType":"494","messageId":"495","endLine":3,"endColumn":43},{"ruleId":"523","severity":1,"message":"524","line":50,"column":19,"nodeType":"525","messageId":"526","endLine":50,"endColumn":21},{"ruleId":"523","severity":1,"message":"524","line":52,"column":22,"nodeType":"525","messageId":"526","endLine":52,"endColumn":24},{"ruleId":"523","severity":1,"message":"524","line":54,"column":22,"nodeType":"525","messageId":"526","endLine":54,"endColumn":24},{"ruleId":"523","severity":1,"message":"524","line":56,"column":22,"nodeType":"525","messageId":"526","endLine":56,"endColumn":24},{"ruleId":"492","severity":1,"message":"527","line":5,"column":21,"nodeType":"494","messageId":"495","endLine":5,"endColumn":24},{"ruleId":"492","severity":1,"message":"528","line":5,"column":26,"nodeType":"494","messageId":"495","endLine":5,"endColumn":29},{"ruleId":"492","severity":1,"message":"529","line":5,"column":31,"nodeType":"494","messageId":"495","endLine":5,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":5,"column":37,"nodeType":"494","messageId":"495","endLine":5,"endColumn":43},{"ruleId":"492","severity":1,"message":"585","line":2,"column":21,"nodeType":"494","messageId":"495","endLine":2,"endColumn":24},{"ruleId":"492","severity":1,"message":"586","line":2,"column":26,"nodeType":"494","messageId":"495","endLine":2,"endColumn":35},{"ruleId":"492","severity":1,"message":"587","line":6,"column":11,"nodeType":"494","messageId":"495","endLine":6,"endColumn":14},{"ruleId":"492","severity":1,"message":"588","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":18},{"ruleId":"492","severity":1,"message":"589","line":1,"column":25,"nodeType":"494","messageId":"495","endLine":1,"endColumn":33},{"ruleId":"492","severity":1,"message":"552","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":14},{"ruleId":"492","severity":1,"message":"590","line":49,"column":5,"nodeType":"494","messageId":"495","endLine":49,"endColumn":10},{"ruleId":"492","severity":1,"message":"591","line":50,"column":5,"nodeType":"494","messageId":"495","endLine":50,"endColumn":14},{"ruleId":"492","severity":1,"message":"592","line":51,"column":5,"nodeType":"494","messageId":"495","endLine":51,"endColumn":13},{"ruleId":"492","severity":1,"message":"518","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":9},{"ruleId":"492","severity":1,"message":"593","line":3,"column":15,"nodeType":"494","messageId":"495","endLine":3,"endColumn":19},{"ruleId":"492","severity":1,"message":"585","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"586","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"587","line":15,"column":11,"nodeType":"494","messageId":"495","endLine":15,"endColumn":14},{"ruleId":"492","severity":1,"message":"518","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":9},{"ruleId":"492","severity":1,"message":"587","line":8,"column":11,"nodeType":"494","messageId":"495","endLine":8,"endColumn":14},{"ruleId":"492","severity":1,"message":"587","line":26,"column":11,"nodeType":"494","messageId":"495","endLine":26,"endColumn":14},{"ruleId":"492","severity":1,"message":"594","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":25},{"ruleId":"492","severity":1,"message":"595","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":19},{"ruleId":"492","severity":1,"message":"585","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":24},{"ruleId":"492","severity":1,"message":"586","line":3,"column":26,"nodeType":"494","messageId":"495","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"596","line":14,"column":3,"nodeType":"494","messageId":"495","endLine":14,"endColumn":8},{"ruleId":"492","severity":1,"message":"597","line":22,"column":5,"nodeType":"494","messageId":"495","endLine":22,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":60,"column":29,"nodeType":"535","messageId":"600","endLine":60,"endColumn":31},{"ruleId":"492","severity":1,"message":"597","line":18,"column":11,"nodeType":"494","messageId":"495","endLine":18,"endColumn":22},{"ruleId":"492","severity":1,"message":"597","line":20,"column":5,"nodeType":"494","messageId":"495","endLine":20,"endColumn":16},{"ruleId":"492","severity":1,"message":"601","line":24,"column":5,"nodeType":"494","messageId":"495","endLine":24,"endColumn":14},"no-native-reassign",["602"],"no-negated-in-lhs",["603"],"no-unused-vars","'socket' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'Redirect' is defined but never used.","'Home' is assigned a value but never used.","'Page2' is assigned a value but never used.","'Page3' is assigned a value but never used.","'Page4' is assigned a value but never used.","'Page5' is assigned a value but never used.","'Page6' is assigned a value but never used.","'ChartEx1' is assigned a value but never used.","'ChartEx2' is assigned a value but never used.","'ChartEx3' is assigned a value but never used.","'Loading' is assigned a value but never used.","'Login' is assigned a value but never used.","'CreateTeam' is assigned a value but never used.","'GenerateOrderForm' is assigned a value but never used.","'Target' is assigned a value but never used.","'Help' is assigned a value but never used.","'Confirm' is assigned a value but never used.","'Map' is assigned a value but never used.","'AddMaterial' is assigned a value but never used.","'AddProduct' is assigned a value but never used.","'AddMachine' is assigned a value but never used.","'_' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["604"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'EditIcon' is defined but never used.","'Link' is defined but never used.","'machines' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getAllMachines' and 'isLoadingMachines'. Either include them or remove the dependency array.",["605"],"'ListGroup' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AgGridReact' is defined but never used.","'ProgressBar' is defined but never used.","'$' is defined but never used.","'baseFileUrl' is defined but never used.","'userChat' is assigned a value but never used.","'isReciever' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.displayName' and 'props.match.params.id'. Either include them or remove the dependency array.",["606"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'moment' is defined but never used.","'Table' is defined but never used.","'InputGroup' is defined but never used.","'FormCheck' is defined but never used.","'response' is defined but never used.","React Hook useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array.",["607"],"'Nav' is defined but never used.","'Container' is defined but never used.",["608"],"'CardText' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllProject', 'getAllTeams', 'getEmployeeAndStaff', 'getStaff', 'getUser', 'pieChartOrders', and 'processedOrder'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["609"],"'Fragment' is defined but never used.","'DateFnsUtils' is defined but never used.","'LuxonUtils' is defined but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'machines'. Either include it or remove the dependency array.",["610"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useHistory' is defined but never used.","'response' is assigned a value but never used.","'MyChart' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleMachine' and 'isLoadingMachine'. Either include them or remove the dependency array.",["611"],"React Hook useEffect has a missing dependency: 'isLoadingMachines'. Either include it or remove the dependency array.",["612"],"'GoogleMap' is defined but never used.","'Marker' is defined but never used.","'Calendar' is defined but never used.","'put' is defined but never used.","'deleteApi' is defined but never used.","'res' is assigned a value but never used.","'SearchIcon' is defined but never used.","'useState' is defined but never used.","'image' is assigned a value but never used.","'signature' is assigned a value but never used.","'bodyPart' is assigned a value but never used.","'post' is defined but never used.","'interactionPlugin' is defined but never used.","'Draggable' is defined but never used.","'Input' is defined but never used.","'buttonLabel' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'employees' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"613","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},"Update the dependencies array to be: [dispatch]",{"range":"630","text":"631"},"Update the dependencies array to be: [getAllMachines, isLoadingMachines]",{"range":"632","text":"633"},"Update the dependencies array to be: [props.match.params.displayName, props.match.params.id]",{"range":"634","text":"635"},"Update the dependencies array to be: [employees]",{"range":"636","text":"637"},{"range":"638","text":"631"},"Update the dependencies array to be: [getAllProject, getAllTeams, getEmployeeAndStaff, getStaff, getUser, pieChartOrders, processedOrder]",{"range":"639","text":"640"},"Update the dependencies array to be: [machines]",{"range":"641","text":"642"},"Update the dependencies array to be: [getSingleMachine, isLoadingMachine]",{"range":"643","text":"644"},"Update the dependencies array to be: [isLoadingMachines]",{"range":"645","text":"646"},[1076,1078],"[dispatch]",[1998,2000],"[getAllMachines, isLoadingMachines]",[3523,3525],"[props.match.params.displayName, props.match.params.id]",[836,838],"[employees]",[1404,1406],[1615,1617],"[getAllProject, getAllTeams, getEmployeeAndStaff, getStaff, getUser, pieChartOrders, processedOrder]",[1759,1761],"[machines]",[1378,1380],"[getSingleMachine, isLoadingMachine]",[1037,1039],"[isLoadingMachines]"]